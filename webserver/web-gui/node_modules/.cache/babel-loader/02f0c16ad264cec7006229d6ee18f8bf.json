{"ast":null,"code":"// generates fake data for many computer systems properties\nvar commonFileTypes = [\"video\", \"audio\", \"image\", \"text\", \"application\"];\nvar commonMimeTypes = [\"application/pdf\", \"audio/mpeg\", \"audio/wav\", \"image/png\", \"image/jpeg\", \"image/gif\", \"video/mp4\", \"video/mpeg\", \"text/html\"];\n\nfunction setToArray(set) {\n  // shortcut if Array.from is available\n  if (Array.from) {\n    return Array.from(set);\n  }\n\n  var array = [];\n  set.forEach(function (item) {\n    array.push(item);\n  });\n  return array;\n}\n/**\n *\n * @namespace faker.system\n */\n\n\nfunction System(faker) {\n  /**\n   * generates a file name\n   *\n   * @method faker.system.fileName\n   */\n  this.fileName = function () {\n    var str = faker.random.words();\n    str = str.toLowerCase().replace(/\\W/g, \"_\") + \".\" + faker.system.fileExt();\n    ;\n    return str;\n  };\n  /**\n   * commonFileName\n   *\n   * @method faker.system.commonFileName\n   * @param {string} ext\n   */\n\n\n  this.commonFileName = function (ext) {\n    var str = faker.random.words();\n    str = str.toLowerCase().replace(/\\W/g, \"_\");\n    str += \".\" + (ext || faker.system.commonFileExt());\n    return str;\n  };\n  /**\n   * mimeType\n   *\n   * @method faker.system.mimeType\n   */\n\n\n  this.mimeType = function () {\n    var typeSet = new Set();\n    var extensionSet = new Set();\n    var mimeTypes = faker.definitions.system.mimeTypes;\n    Object.keys(mimeTypes).forEach(function (m) {\n      var type = m.split(\"/\")[0];\n      typeSet.add(type);\n\n      if (mimeTypes[m].extensions instanceof Array) {\n        mimeTypes[m].extensions.forEach(function (ext) {\n          extensionSet.add(ext);\n        });\n      }\n    });\n    var types = setToArray(typeSet);\n    var extensions = setToArray(extensionSet);\n    var mimeTypeKeys = Object.keys(faker.definitions.system.mimeTypes);\n    return faker.random.arrayElement(mimeTypeKeys);\n  };\n  /**\n   * returns a commonly used file type\n   *\n   * @method faker.system.commonFileType\n   */\n\n\n  this.commonFileType = function () {\n    return faker.random.arrayElement(commonFileTypes);\n  };\n  /**\n   * returns a commonly used file extension\n   *\n   * @method faker.system.commonFileExt\n   */\n\n\n  this.commonFileExt = function () {\n    return faker.system.fileExt(faker.random.arrayElement(commonMimeTypes));\n  };\n  /**\n   * returns any file type available as mime-type\n   *\n   * @method faker.system.fileType\n   */\n\n\n  this.fileType = function () {\n    var typeSet = new Set();\n    var extensionSet = new Set();\n    var mimeTypes = faker.definitions.system.mimeTypes;\n    Object.keys(mimeTypes).forEach(function (m) {\n      var type = m.split(\"/\")[0];\n      typeSet.add(type);\n\n      if (mimeTypes[m].extensions instanceof Array) {\n        mimeTypes[m].extensions.forEach(function (ext) {\n          extensionSet.add(ext);\n        });\n      }\n    });\n    var types = setToArray(typeSet);\n    var extensions = setToArray(extensionSet);\n    var mimeTypeKeys = Object.keys(faker.definitions.system.mimeTypes);\n    return faker.random.arrayElement(types);\n  };\n  /**\n   * fileExt\n   *\n   * @method faker.system.fileExt\n   * @param {string} mimeType\n   */\n\n\n  this.fileExt = function (mimeType) {\n    var typeSet = new Set();\n    var extensionSet = new Set();\n    var mimeTypes = faker.definitions.system.mimeTypes;\n    Object.keys(mimeTypes).forEach(function (m) {\n      var type = m.split(\"/\")[0];\n      typeSet.add(type);\n\n      if (mimeTypes[m].extensions instanceof Array) {\n        mimeTypes[m].extensions.forEach(function (ext) {\n          extensionSet.add(ext);\n        });\n      }\n    });\n    var types = setToArray(typeSet);\n    var extensions = setToArray(extensionSet);\n    var mimeTypeKeys = Object.keys(faker.definitions.system.mimeTypes);\n\n    if (mimeType) {\n      var mimes = faker.definitions.system.mimeTypes;\n      return faker.random.arrayElement(mimes[mimeType].extensions);\n    }\n\n    return faker.random.arrayElement(extensions);\n  };\n  /**\n   * returns directory path\n   *\n   * @method faker.system.directoryPath\n   */\n\n\n  this.directoryPath = function () {\n    var paths = faker.definitions.system.directoryPaths;\n    return faker.random.arrayElement(paths);\n  };\n  /**\n   * returns file path\n   *\n   * @method faker.system.filePath\n   */\n\n\n  this.filePath = function () {\n    return faker.fake(\"{{system.directoryPath}}/{{system.fileName}}.{{system.fileExt}}\");\n  };\n  /**\n   * semver\n   *\n   * @method faker.system.semver\n   */\n\n\n  this.semver = function () {\n    return [faker.datatype.number(9), faker.datatype.number(9), faker.datatype.number(9)].join('.');\n  };\n}\n\nmodule['exports'] = System;","map":{"version":3,"names":["commonFileTypes","commonMimeTypes","setToArray","set","Array","from","array","forEach","item","push","System","faker","fileName","str","random","words","toLowerCase","replace","system","fileExt","commonFileName","ext","commonFileExt","mimeType","typeSet","Set","extensionSet","mimeTypes","definitions","Object","keys","m","type","split","add","extensions","types","mimeTypeKeys","arrayElement","commonFileType","fileType","mimes","directoryPath","paths","directoryPaths","filePath","fake","semver","datatype","number","join","module"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/faker/lib/system.js"],"sourcesContent":["// generates fake data for many computer systems properties\n\nvar commonFileTypes = [\n  \"video\",\n  \"audio\",\n  \"image\",\n  \"text\",\n  \"application\"\n];\n\nvar commonMimeTypes = [\n  \"application/pdf\",\n  \"audio/mpeg\",\n  \"audio/wav\",\n  \"image/png\",\n  \"image/jpeg\",\n  \"image/gif\",\n  \"video/mp4\",\n  \"video/mpeg\",\n  \"text/html\"\n];\n\nfunction setToArray(set) {\n  // shortcut if Array.from is available\n  if (Array.from) { return Array.from(set); }\n\n  var array = [];\n  set.forEach(function (item) {\n    array.push(item);\n  });\n  return array;\n}\n\n/**\n *\n * @namespace faker.system\n */\nfunction System(faker) {\n\n  /**\n   * generates a file name\n   *\n   * @method faker.system.fileName\n   */\n  this.fileName = function () {\n    var str = faker.random.words(); \n    str = str\n          .toLowerCase()\n          .replace(/\\W/g, \"_\") + \".\" + faker.system.fileExt();;\n    return str;\n  };\n\n  /**\n   * commonFileName\n   *\n   * @method faker.system.commonFileName\n   * @param {string} ext\n   */\n  this.commonFileName = function (ext) {\n    var str = faker.random.words();\n    str = str\n          .toLowerCase()\n          .replace(/\\W/g, \"_\");\n    str += \".\" + (ext || faker.system.commonFileExt());\n    return str;\n  };\n\n  /**\n   * mimeType\n   *\n   * @method faker.system.mimeType\n   */\n  this.mimeType = function () {\n    var typeSet = new Set();\n    var extensionSet = new Set();\n    var mimeTypes = faker.definitions.system.mimeTypes;\n\n    Object.keys(mimeTypes).forEach(function (m) {\n      var type = m.split(\"/\")[0];\n\n      typeSet.add(type);\n\n      if (mimeTypes[m].extensions instanceof Array) {\n        mimeTypes[m].extensions.forEach(function (ext) {\n          extensionSet.add(ext);\n        });\n      }\n    });\n\n    var types = setToArray(typeSet);\n    var extensions = setToArray(extensionSet);\n    var mimeTypeKeys = Object.keys(faker.definitions.system.mimeTypes);\n\n    return faker.random.arrayElement(mimeTypeKeys);\n  };\n\n  /**\n   * returns a commonly used file type\n   *\n   * @method faker.system.commonFileType\n   */\n  this.commonFileType = function () {\n    return faker.random.arrayElement(commonFileTypes);\n  };\n\n  /**\n   * returns a commonly used file extension\n   *\n   * @method faker.system.commonFileExt\n   */\n  this.commonFileExt = function () {\n    return faker.system.fileExt(faker.random.arrayElement(commonMimeTypes));\n  };\n\n\n  /**\n   * returns any file type available as mime-type\n   *\n   * @method faker.system.fileType\n   */\n  this.fileType = function () {\n    var typeSet = new Set();\n    var extensionSet = new Set();\n    var mimeTypes = faker.definitions.system.mimeTypes;\n\n    Object.keys(mimeTypes).forEach(function (m) {\n      var type = m.split(\"/\")[0];\n\n      typeSet.add(type);\n\n      if (mimeTypes[m].extensions instanceof Array) {\n        mimeTypes[m].extensions.forEach(function (ext) {\n          extensionSet.add(ext);\n        });\n      }\n    });\n\n    var types = setToArray(typeSet);\n    var extensions = setToArray(extensionSet);\n    var mimeTypeKeys = Object.keys(faker.definitions.system.mimeTypes);\n    return faker.random.arrayElement(types);\n\n  };\n\n  /**\n   * fileExt\n   *\n   * @method faker.system.fileExt\n   * @param {string} mimeType\n   */\n  this.fileExt = function (mimeType) {\n    var typeSet = new Set();\n    var extensionSet = new Set();\n    var mimeTypes = faker.definitions.system.mimeTypes;\n\n    Object.keys(mimeTypes).forEach(function (m) {\n      var type = m.split(\"/\")[0];\n\n      typeSet.add(type);\n\n      if (mimeTypes[m].extensions instanceof Array) {\n        mimeTypes[m].extensions.forEach(function (ext) {\n          extensionSet.add(ext);\n        });\n      }\n    });\n\n    var types = setToArray(typeSet);\n    var extensions = setToArray(extensionSet);\n    var mimeTypeKeys = Object.keys(faker.definitions.system.mimeTypes);\n\n    if (mimeType) {\n      var mimes = faker.definitions.system.mimeTypes;\n      return faker.random.arrayElement(mimes[mimeType].extensions);\n    }\n\n    return faker.random.arrayElement(extensions);\n  };\n\n  /**\n   * returns directory path\n   *\n   * @method faker.system.directoryPath\n   */\n  this.directoryPath = function () {\n    var paths = faker.definitions.system.directoryPaths\n    return faker.random.arrayElement(paths);\n  };\n\n  /**\n   * returns file path\n   *\n   * @method faker.system.filePath\n   */\n  this.filePath = function () {\n    return faker.fake(\"{{system.directoryPath}}/{{system.fileName}}.{{system.fileExt}}\");\n  };\n\n  /**\n   * semver\n   *\n   * @method faker.system.semver\n   */\n  this.semver = function () {\n    return [faker.datatype.number(9),\n      faker.datatype.number(9),\n      faker.datatype.number(9)].join('.');\n  }\n\n}\n\nmodule['exports'] = System;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}