{"ast":null,"code":"var _jsxFileName = \"/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/AgentMap.js\";\nimport React from 'react';\nimport { Chart as ChartJS, LinearScale, PointElement, LineElement, Tooltip, Legend } from 'chart.js';\nimport { Scatter } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LinearScale, PointElement, LineElement, Tooltip, Legend);\n\nclass AgentMap extends React.Component {\n  // Constructor\n  constructor(props) {\n    super(props); // Init Datasets\n\n    const datasets = [];\n    this.props.agents.forEach(function (agent) {\n      datasets.push({\n        label: agent.agent_id,\n        data: [agent.cur_pos],\n        backgroundColor: agent.color\n      });\n    }); // Init State\n\n    this.state = {\n      agents: this.props.agents,\n      options: {\n        parsing: {\n          xAxisKey: 'x',\n          yAxisKey: 'z'\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            min: 0,\n            max: this.props.max_NS,\n            reverse: true,\n            grid: {\n              color: 'LightGray'\n            },\n            ticks: {\n              stepSize: this.props.tile_size\n            }\n          },\n          x: {\n            beginAtZero: true,\n            min: 0,\n            max: this.props.max_EW,\n            grid: {\n              color: 'LightGray'\n            },\n            ticks: {\n              stepSize: this.props.tile_size\n            }\n          }\n        }\n      },\n      data: {\n        datasets\n      }\n    };\n    console.log(this.state.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Scatter, {\n      options: this.state.options,\n      data: this.state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default AgentMap;","map":{"version":3,"names":["React","Chart","ChartJS","LinearScale","PointElement","LineElement","Tooltip","Legend","Scatter","register","AgentMap","Component","constructor","props","datasets","agents","forEach","agent","push","label","agent_id","data","cur_pos","backgroundColor","color","state","options","parsing","xAxisKey","yAxisKey","scales","y","beginAtZero","min","max","max_NS","reverse","grid","ticks","stepSize","tile_size","x","max_EW","console","log","render"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/AgentMap.js"],"sourcesContent":["import React from 'react';\nimport {\n  Chart as ChartJS,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Scatter } from 'react-chartjs-2';\n\nChartJS.register(LinearScale, PointElement, LineElement, Tooltip, Legend);\n\nclass AgentMap extends React.Component {\n\n  // Constructor\n  constructor(props) {\n    super(props);\n\n    // Init Datasets\n    const datasets = [];\n    this.props.agents.forEach(function (agent) {\n      datasets.push({\n        label: agent.agent_id,\n        data: [agent.cur_pos],\n        backgroundColor: agent.color,\n      });\n    });\n\n    // Init State\n    this.state = {\n      agents: this.props.agents,\n      options: {\n        parsing: {\n            xAxisKey: 'x',\n            yAxisKey: 'z',\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            min : 0,\n            max : this.props.max_NS,\n            reverse : true,\n            grid : {\n                color: 'LightGray',\n            },\n            ticks: {\n              stepSize: this.props.tile_size,\n            }\n          },\n          x: {\n            beginAtZero: true,\n            min : 0,\n            max : this.props.max_EW,\n            grid : {\n                color: 'LightGray',\n            },\n            ticks: {\n              stepSize: this.props.tile_size,\n            }\n          },\n        },\n      },\n      data:{datasets},\n    };\n    console.log(this.state.data);\n  }\n\n  render() {\n    return <Scatter options={this.state.options} data={this.state.data} />;\n  }\n}\n\nexport default AgentMap;\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,OALF,EAMEC,MANF,QAOO,UAPP;AAQA,SAASC,OAAT,QAAwB,iBAAxB;;AAEAN,OAAO,CAACO,QAAR,CAAiBN,WAAjB,EAA8BC,YAA9B,EAA4CC,WAA5C,EAAyDC,OAAzD,EAAkEC,MAAlE;;AAEA,MAAMG,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;EAErC;EACAC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN,EADiB,CAGjB;;IACA,MAAMC,QAAQ,GAAG,EAAjB;IACA,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,OAAlB,CAA0B,UAAUC,KAAV,EAAiB;MACzCH,QAAQ,CAACI,IAAT,CAAc;QACZC,KAAK,EAAEF,KAAK,CAACG,QADD;QAEZC,IAAI,EAAE,CAACJ,KAAK,CAACK,OAAP,CAFM;QAGZC,eAAe,EAAEN,KAAK,CAACO;MAHX,CAAd;IAKD,CAND,EALiB,CAajB;;IACA,KAAKC,KAAL,GAAa;MACXV,MAAM,EAAE,KAAKF,KAAL,CAAWE,MADR;MAEXW,OAAO,EAAE;QACPC,OAAO,EAAE;UACLC,QAAQ,EAAE,GADL;UAELC,QAAQ,EAAE;QAFL,CADF;QAKPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE,IADZ;YAEDC,GAAG,EAAG,CAFL;YAGDC,GAAG,EAAG,KAAKrB,KAAL,CAAWsB,MAHhB;YAIDC,OAAO,EAAG,IAJT;YAKDC,IAAI,EAAG;cACHb,KAAK,EAAE;YADJ,CALN;YAQDc,KAAK,EAAE;cACLC,QAAQ,EAAE,KAAK1B,KAAL,CAAW2B;YADhB;UARN,CADG;UAaNC,CAAC,EAAE;YACDT,WAAW,EAAE,IADZ;YAEDC,GAAG,EAAG,CAFL;YAGDC,GAAG,EAAG,KAAKrB,KAAL,CAAW6B,MAHhB;YAIDL,IAAI,EAAG;cACHb,KAAK,EAAE;YADJ,CAJN;YAODc,KAAK,EAAE;cACLC,QAAQ,EAAE,KAAK1B,KAAL,CAAW2B;YADhB;UAPN;QAbG;MALD,CAFE;MAiCXnB,IAAI,EAAC;QAACP;MAAD;IAjCM,CAAb;IAmCA6B,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWJ,IAAvB;EACD;;EAEDwB,MAAM,GAAG;IACP,oBAAO,QAAC,OAAD;MAAS,OAAO,EAAE,KAAKpB,KAAL,CAAWC,OAA7B;MAAsC,IAAI,EAAE,KAAKD,KAAL,CAAWJ;IAAvD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;AAzDoC;;AA4DvC,eAAeX,QAAf"},"metadata":{},"sourceType":"module"}