{"ast":null,"code":"/**\n *\n * @namespace faker.name\n */\nfunction Name(faker) {\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n      if (typeof gender === 'string') {\n        if (gender.toLowerCase() === 'male') {\n          gender = 0;\n        } else if (gender.toLowerCase() === 'female') {\n          gender = 1;\n        }\n      }\n\n      if (typeof gender !== 'number') {\n        if (typeof faker.definitions.name.first_name === \"undefined\") {\n          gender = faker.datatype.number(1);\n        } else {\n          //Fall back to non-gendered names if they exist and gender wasn't specified\n          return faker.random.arrayElement(faker.definitions.name.first_name);\n        }\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.definitions.name.male_first_name);\n      } else {\n        return faker.random.arrayElement(faker.definitions.name.female_first_name);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n\n\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n  /**\n   * middleName\n   *\n   * @method middleName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n\n\n  this.middleName = function (gender) {\n    if (typeof faker.definitions.name.male_middle_name !== \"undefined\" && typeof faker.definitions.name.female_middle_name !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_middle_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_middle_name);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.middle_name);\n  };\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n\n\n  this.findName = function (firstName, lastName, gender) {\n    var r = faker.datatype.number(8);\n    var prefix, suffix; // in particular locales first and last names split by gender,\n    // thus we keep consistency by passing 0 as male and 1 as female\n\n    if (typeof gender !== 'number') {\n      gender = faker.datatype.number(1);\n    }\n\n    firstName = firstName || faker.name.firstName(gender);\n    lastName = lastName || faker.name.lastName(gender);\n\n    switch (r) {\n      case 0:\n        prefix = faker.name.prefix(gender);\n\n        if (prefix) {\n          return prefix + \" \" + firstName + \" \" + lastName;\n        }\n\n      case 1:\n        suffix = faker.name.suffix(gender);\n\n        if (suffix) {\n          return firstName + \" \" + lastName + \" \" + suffix;\n        }\n\n    }\n\n    return firstName + \" \" + lastName;\n  };\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n\n\n  this.jobTitle = function () {\n    return faker.name.jobDescriptor() + \" \" + faker.name.jobArea() + \" \" + faker.name.jobType();\n  };\n  /**\n   * gender\n   *\n   * @method gender\n   * @memberof faker.name\n   */\n\n\n  this.gender = function (binary) {\n    if (binary) {\n      return faker.random.arrayElement(faker.definitions.name.binary_gender);\n    } else {\n      return faker.random.arrayElement(faker.definitions.name.gender);\n    }\n  };\n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n\n\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n\n\n  this.suffix = function () {\n    return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n\n\n  this.title = function () {\n    var descriptor = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n        level = faker.random.arrayElement(faker.definitions.name.title.level),\n        job = faker.random.arrayElement(faker.definitions.name.title.job);\n    return descriptor + \" \" + level + \" \" + job;\n  };\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n\n\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n\n\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n\n\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n}\n\nmodule['exports'] = Name;","map":{"version":3,"names":["Name","faker","firstName","gender","definitions","name","male_first_name","female_first_name","toLowerCase","first_name","datatype","number","random","arrayElement","lastName","male_last_name","female_last_name","locales","locale","last_name","middleName","male_middle_name","female_middle_name","middle_name","findName","r","prefix","suffix","jobTitle","jobDescriptor","jobArea","jobType","binary","binary_gender","male_prefix","female_prefix","title","descriptor","level","job","module"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/faker/lib/name.js"],"sourcesContent":["/**\n *\n * @namespace faker.name\n */\nfunction Name (faker) {\n\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n\n      if(typeof gender === 'string') {\n        if(gender.toLowerCase() === 'male') {\n          gender = 0;\n        }\n        else if(gender.toLowerCase() === 'female') {\n          gender = 1;\n        }\n      }\n\n      if (typeof gender !== 'number') {\n        if(typeof faker.definitions.name.first_name === \"undefined\") {\n          gender = faker.datatype.number(1);\n        }\n        else {\n          //Fall back to non-gendered names if they exist and gender wasn't specified\n          return faker.random.arrayElement(faker.definitions.name.first_name);\n        }\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.definitions.name.male_first_name)\n      } else {\n        return faker.random.arrayElement(faker.definitions.name.female_first_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n\n  /**\n   * middleName\n   *\n   * @method middleName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.middleName = function (gender) {\n    if (typeof faker.definitions.name.male_middle_name !== \"undefined\" && typeof faker.definitions.name.female_middle_name !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_middle_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_middle_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.middle_name);\n  };\n\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.findName = function (firstName, lastName, gender) {\n    var r = faker.datatype.number(8);\n    var prefix, suffix;\n    // in particular locales first and last names split by gender,\n    // thus we keep consistency by passing 0 as male and 1 as female\n    if (typeof gender !== 'number') {\n      gender = faker.datatype.number(1);\n    }\n    firstName = firstName || faker.name.firstName(gender);\n    lastName = lastName || faker.name.lastName(gender);\n    switch (r) {\n      case 0:\n        prefix = faker.name.prefix(gender);\n        if (prefix) {\n          return prefix + \" \" + firstName + \" \" + lastName;\n        }\n      case 1:\n        suffix = faker.name.suffix(gender);\n        if (suffix) {\n          return firstName + \" \" + lastName + \" \" + suffix;\n        }\n    }\n\n    return firstName + \" \" + lastName;\n  };\n\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n  this.jobTitle = function () {\n    return  faker.name.jobDescriptor() + \" \" +\n      faker.name.jobArea() + \" \" +\n      faker.name.jobType();\n  };\n\n  /**\n   * gender\n   *\n   * @method gender\n   * @memberof faker.name\n   */\n  this.gender = function (binary) {\n    if (binary) {\n      return faker.random.arrayElement(faker.definitions.name.binary_gender);\n    } else {\n      return faker.random.arrayElement(faker.definitions.name.gender);\n    }\n  }\n  \n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n  this.suffix = function () {\n    return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n  this.title = function() {\n    var descriptor  = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n      level       = faker.random.arrayElement(faker.definitions.name.title.level),\n      job         = faker.random.arrayElement(faker.definitions.name.title.job);\n\n    return descriptor + \" \" + level + \" \" + job;\n  };\n\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n\n}\n\nmodule['exports'] = Name;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}