{"ast":null,"code":"var _jsxFileName = \"/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/stories/Button.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n/**\n * Primary UI component for user interaction\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = _ref => {\n  let {\n    primary,\n    backgroundColor,\n    size,\n    label,\n    ...props\n  } = _ref;\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: ['storybook-button', `storybook-button--${size}`, mode].join(' '),\n    style: backgroundColor && {\n      backgroundColor\n    },\n    ...props,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func\n};\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");\nButton.__docgenInfo = {\n  \"description\": \"Primary UI component for user interaction\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"backgroundColor\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"description\": \"What background color to use\",\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false\n    },\n    \"primary\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"description\": \"Is this the principal call to action on the page?\",\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'medium'\",\n        \"computed\": false\n      },\n      \"description\": \"How large should the button be?\",\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'medium'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'large'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false\n    },\n    \"onClick\": {\n      \"defaultValue\": {\n        \"value\": \"undefined\",\n        \"computed\": true\n      },\n      \"description\": \"Optional click handler\",\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false\n    },\n    \"secondary\": {\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false\n    },\n    \"label\": {\n      \"description\": \"Button contents\",\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/Button.jsx\"] = {\n    name: \"Button\",\n    docgenInfo: Button.__docgenInfo,\n    path: \"src/stories/Button.jsx\"\n  };\n}","map":{"version":3,"names":["React","PropTypes","Button","primary","backgroundColor","size","label","props","mode","join","propTypes","bool","secondary","string","oneOf","isRequired","onClick","func","defaultProps","undefined"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/stories/Button.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({ primary, backgroundColor, size, label, ...props }) => {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n      style={backgroundColor && { backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined,\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AAEA;AACA;AACA;;;AACA,OAAO,MAAMC,MAAM,GAAG,QAAyD;EAAA,IAAxD;IAAEC,OAAF;IAAWC,eAAX;IAA4BC,IAA5B;IAAkCC,KAAlC;IAAyC,GAAGC;EAA5C,CAAwD;EAC7E,MAAMC,IAAI,GAAGL,OAAO,GAAG,2BAAH,GAAiC,6BAArD;EACA,oBACE;IACE,IAAI,EAAC,QADP;IAEE,SAAS,EAAE,CAAC,kBAAD,EAAsB,qBAAoBE,IAAK,EAA/C,EAAkDG,IAAlD,EAAwDC,IAAxD,CAA6D,GAA7D,CAFb;IAGE,KAAK,EAAEL,eAAe,IAAI;MAAEA;IAAF,CAH5B;IAAA,GAIMG,KAJN;IAAA,UAMGD;EANH;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAZM;KAAMJ,M;AAcbA,MAAM,CAACQ,SAAP,GAAmB;EACjB;AACF;AACA;EACEP,OAAO,EAAEF,SAAS,CAACU,IAJF;EAKjBC,SAAS,EAAEX,SAAS,CAACU,IALJ;;EAMjB;AACF;AACA;EACEP,eAAe,EAAEH,SAAS,CAACY,MATV;;EAUjB;AACF;AACA;EACER,IAAI,EAAEJ,SAAS,CAACa,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAbW;;EAcjB;AACF;AACA;EACER,KAAK,EAAEL,SAAS,CAACY,MAAV,CAAiBE,UAjBP;;EAkBjB;AACF;AACA;EACEC,OAAO,EAAEf,SAAS,CAACgB;AArBF,CAAnB;AAwBAf,MAAM,CAACgB,YAAP,GAAsB;EACpBd,eAAe,EAAE,IADG;EAEpBD,OAAO,EAAE,KAFW;EAGpBE,IAAI,EAAE,QAHc;EAIpBW,OAAO,EAAEG;AAJW,CAAtB"},"metadata":{},"sourceType":"module"}