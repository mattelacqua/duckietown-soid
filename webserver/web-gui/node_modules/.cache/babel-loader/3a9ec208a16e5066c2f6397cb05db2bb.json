{"ast":null,"code":"import React, { useRef, useState, useEffect } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar KnobArea =\n/** @class */\nfunction () {\n  function KnobArea(refElement, props) {\n    var _this = this;\n\n    this.handleOnMouseDown = function (event) {\n      _this.addWindowEventListeners('mouse');\n\n      var pageX = event.pageX,\n          pageY = event.pageY,\n          clientX = event.clientX,\n          clientY = event.clientY;\n\n      _this.updateAreaLocation({\n        pageX: pageX,\n        pageY: pageY,\n        clientX: clientX,\n        clientY: clientY\n      });\n\n      _this.updateAngleValue(pageX, pageY);\n    };\n\n    this.handleOnMouseMove = function (event) {\n      if (!_this.isInteracting) {\n        return;\n      }\n\n      var pageX = event.pageX,\n          pageY = event.pageY;\n\n      _this.updateAngleValue(pageX, pageY);\n    };\n\n    this.handleOnMouseUp = function () {\n      _this.removeWindowEventListeners('mouse');\n    };\n\n    this.handleOnTouchStart = function (event) {\n      _this.addWindowEventListeners('touch');\n\n      if ('changedTouches' in event && event.changedTouches.length === 1) {\n        var _a = event.changedTouches[0],\n            pageX = _a.pageX,\n            pageY = _a.pageY,\n            clientX = _a.clientX,\n            clientY = _a.clientY;\n\n        _this.updateAreaLocation({\n          pageX: pageX,\n          pageY: pageY,\n          clientX: clientX,\n          clientY: clientY\n        });\n\n        _this.updateAngleValue(pageX, pageY);\n      }\n    };\n\n    this.handleOnTouchMove = function (event) {\n      if (!_this.isInteracting) {\n        return;\n      }\n\n      if ('changedTouches' in event && event.changedTouches.length === 1) {\n        var _a = event.changedTouches[0],\n            pageX = _a.pageX,\n            pageY = _a.pageY;\n\n        _this.updateAngleValue(pageX, pageY);\n      }\n    };\n\n    this.handleOnTouchEnd = function () {\n      _this.removeWindowEventListeners('touch');\n    };\n\n    this.handleOnFocus = function () {\n      _this.isInteracting = true;\n    };\n\n    this.handleOnBlur = function () {\n      _this.isInteracting = false;\n    };\n\n    this.handleOnKeyDown = function (event) {\n      var keyCode = event.key || {\n        38: 'ArrowUp',\n        40: 'ArrowDown'\n      }[event.keyCode];\n\n      if (keyCode === 'ArrowUp' && _this.value + _this.step <= _this.max) {\n        _this.value += _this.step;\n        _this.angle = _this.angleFromValue(_this.value);\n      } else if (keyCode === 'ArrowDown' && _this.value - _this.step >= _this.min) {\n        _this.value -= _this.step;\n        _this.angle = _this.angleFromValue(_this.value);\n      }\n    };\n\n    this.onAngleChange = props.onAngleChange;\n    this.onValueChange = props.onValueChange;\n    this.onInteractionChange = props.onInteractionChange;\n    this._locationX = 0;\n    this._locationY = 0;\n    this.refElement = refElement;\n    this._isInteracting = false;\n    this.windowEventListeners = {\n      mouse: [['mousemove', this.handleOnMouseMove], ['mouseup', this.handleOnMouseUp]],\n      touch: [['touchmove', this.handleOnTouchMove], ['touchend', this.handleOnTouchEnd]]\n    };\n    this.updateFromProps(props);\n  }\n\n  KnobArea.prototype.updateFromProps = function (props) {\n    if (props.max <= props.min || props.max < props.min + props.step) {\n      throw new Error('Max value should be bigger or equal to min+step value.');\n    }\n\n    this.min = props.min;\n    this.max = props.max;\n    this.step = props.step;\n    this.diameter = props.diameter;\n    this.onAngleChange = props.onAngleChange || this.onAngleChange;\n    this.onValueChange = props.onValueChange || this.onValueChange;\n    this.onInteractionChange = props.onInteractionChange || this.onInteractionChange;\n    this.spaceMaxFromZero = props.spaceMaxFromZero !== undefined ? props.spaceMaxFromZero : true;\n\n    if (props.jumpLimit) {\n      this.jumpLimit = props.jumpLimit;\n    }\n\n    if (props.value !== this.value) {\n      if (props.min > this.value || props.value < props.min) {\n        this.value = props.min;\n      } else if (props.max < this.value || props.value > props.max) {\n        this.value = props.max;\n      } else {\n        this.value = props.value;\n      }\n\n      this.angle = this.angleFromValue(this.value);\n    }\n\n    if (this.value % this.step || (this.max - this.min) % this.step) {\n      throw new Error('Value and (max - min) should be divisible by step.');\n    }\n  };\n\n  Object.defineProperty(KnobArea.prototype, \"angle\", {\n    get: function () {\n      return this._angle;\n    },\n    set: function (val) {\n      if (this._angle === val) {\n        return;\n      }\n\n      this._angle = val;\n\n      if (this.onAngleChange) {\n        this.onAngleChange(this._angle);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(KnobArea.prototype, \"value\", {\n    get: function () {\n      return this._value;\n    },\n    set: function (val) {\n      var newValue = this.getValueWithinJumpLimit(val);\n\n      if (this._value === newValue) {\n        return;\n      }\n\n      this._value = newValue;\n\n      if (this.onValueChange) {\n        this.onValueChange(this._value);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(KnobArea.prototype, \"isInteracting\", {\n    get: function () {\n      return this._isInteracting;\n    },\n    set: function (val) {\n      if (this._isInteracting === val) {\n        return;\n      }\n\n      this._isInteracting = val;\n\n      if (this.onInteractionChange) {\n        this.onInteractionChange(this._isInteracting);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(KnobArea.prototype, \"numSteps\", {\n    get: function () {\n      return (this.max - this.min) / this.step;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(KnobArea.prototype, \"valsDistribution\", {\n    get: function () {\n      if (this.spaceMaxFromZero) {\n        return 360 / (this.numSteps + 1);\n      }\n\n      return 360 / this.numSteps;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  KnobArea.prototype.getValueWithinJumpLimit = function (newValue) {\n    if (!this.jumpLimit) {\n      return newValue;\n    }\n\n    var limit = Math.max(this.step, Math.ceil((this.max - this.min) * this.jumpLimit));\n\n    if (Math.abs(newValue - this.value) > limit) {\n      if (newValue > this.max * 0.9 && this.value < this.min + this.max * 0.1) {\n        return this.min;\n      }\n\n      if (newValue < this.min + this.max * 0.1 && this.value > this.max * 0.9) {\n        return this.max;\n      }\n\n      return this.value;\n    }\n\n    return newValue;\n  };\n\n  KnobArea.prototype.getComputedTransformXY = function (el) {\n    if (!window.getComputedStyle || !el) {\n      return {\n        x: 0,\n        y: 0,\n        scaleX: 1,\n        scaleY: 1\n      };\n    }\n\n    var style = window.getComputedStyle(el);\n    var transform = style.transform || style.webkitTransform;\n\n    if (!transform) {\n      return {\n        x: 0,\n        y: 0,\n        scaleX: 1,\n        scaleY: 1\n      };\n    }\n\n    var mat = transform.match(/^matrix3d\\((.+)\\)$/);\n\n    if (mat) {\n      var scaleX_1 = parseFloat(mat[1].split(', ')[0]);\n      var scaleY_1 = parseFloat(mat[1].split(', ')[5]);\n      return {\n        x: parseFloat(mat[1].split(', ')[12]),\n        y: parseFloat(mat[1].split(', ')[13]),\n        scaleX: scaleX_1,\n        scaleY: scaleY_1\n      };\n    }\n\n    mat = transform.match(/^matrix\\((.+)\\)$/);\n    var scaleX = mat ? parseFloat(mat[1].split(', ')[0]) : 1;\n    var scaleY = mat ? parseFloat(mat[1].split(', ')[3]) : 1;\n    return {\n      x: mat ? parseFloat(mat[1].split(', ')[4]) : 0,\n      y: mat ? parseFloat(mat[1].split(', ')[5]) : 0,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  };\n\n  KnobArea.prototype.updateAreaLocation = function (eventCoords) {\n    var areaRadius = this.diameter / 2; // See article with explanation at: https://www.kirupa.com/html5/get_element_position_using_javascript.htm\n\n    var x = 0;\n    var y = 0;\n    var el = this.refElement.current;\n    var transformXY = this.getComputedTransformXY(el);\n\n    while (el) {\n      if (el.tagName.toUpperCase() === 'BODY') {\n        // deal with browser quirks with body/window/document and page scroll\n        var xScroll = el.scrollLeft || document.documentElement.scrollLeft;\n        var yScroll = el.scrollTop || document.documentElement.scrollTop;\n        x += el.offsetLeft - xScroll + el.clientLeft;\n        y += el.offsetTop - yScroll + el.clientTop;\n      } else {\n        // for all other non-BODY elements\n        x += el.offsetLeft - el.scrollLeft + el.clientLeft;\n        y += el.offsetTop - el.scrollTop + el.clientTop;\n      }\n\n      x += transformXY.x;\n      y += transformXY.y;\n      el = el.offsetParent;\n      transformXY = this.getComputedTransformXY(el);\n    }\n\n    this._locationX = x + areaRadius;\n    this._locationY = y + areaRadius;\n    this._locationX += eventCoords.pageX - eventCoords.clientX;\n    this._locationY += eventCoords.pageY - eventCoords.clientY;\n  };\n\n  KnobArea.prototype.calcDegreeOfRotation = function (pageX, pageY) {\n    var rad = Math.atan2(pageX - this._locationX, pageY - this._locationY);\n    var deg = Math.abs(rad * (180 / Math.PI) - 180);\n    return deg;\n  };\n\n  KnobArea.prototype.valueFromAngle = function (angle) {\n    var _this = this;\n\n    var angleAsPercent = angle / (this.numSteps * this.valsDistribution);\n    var totalValue = this.numSteps * this.step;\n    var val = this.min + angleAsPercent * totalValue;\n\n    if (val > this.max + this.step / 2) {\n      return this.min;\n    }\n\n    var valuesList = Array.from(new Array(this.numSteps + 1)).map(function (_, i) {\n      return _this.min + i * _this.step;\n    });\n    var closest = valuesList.reduce(function (prev, curr) {\n      return Math.abs(curr - val) < Math.abs(prev - val) ? curr : prev;\n    });\n    return closest;\n  };\n\n  KnobArea.prototype.angleFromValue = function (value) {\n    return Math.ceil((value - this.min) / this.step * this.valsDistribution);\n  };\n\n  KnobArea.prototype.updateAngleValue = function (pageX, pageY) {\n    var _this = this;\n\n    requestAnimationFrame(function () {\n      var updatedAngle = _this.calcDegreeOfRotation(pageX, pageY);\n\n      _this.value = _this.valueFromAngle(updatedAngle);\n      _this.angle = _this.angleFromValue(_this.value);\n    });\n  };\n\n  KnobArea.prototype.addWindowEventListeners = function (group) {\n    this.isInteracting = true;\n    this.windowEventListeners[group].forEach(function (handlerData) {\n      var eventName = handlerData[0],\n          handler = handlerData[1];\n      window.addEventListener(eventName, handler);\n    });\n  };\n\n  KnobArea.prototype.removeWindowEventListeners = function (group) {\n    this.isInteracting = false;\n    this.windowEventListeners[group].forEach(function (handlerData) {\n      var eventName = handlerData[0],\n          handler = handlerData[1];\n      window.removeEventListener(eventName, handler);\n    });\n  };\n\n  return KnobArea;\n}();\n\nfunction KnobErrorWrap(props) {\n  console && console.error(props.error);\n  return React.createElement(\"div\", {\n    style: {\n      width: props.diameter + \"px\",\n      height: props.diameter + \"px\",\n      borderRadius: props.diameter / 2 + \"px\",\n      position: 'relative',\n      outline: 'none',\n      boxSizing: 'border-box',\n      overflow: 'hidden'\n    }\n  }, React.createElement(\"div\", {\n    style: {\n      fontSize: '22px',\n      fontWeight: 'bold',\n      color: 'red',\n      textAlign: 'center',\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      zIndex: 999,\n      paddingTop: 'calc(50% - 0.5em)',\n      background: 'rgba(0, 0, 0, 0.2)',\n      pointerEvents: 'none'\n    }\n  }, \"\\uD83D\\uDCA3\"), props.children);\n}\n\nfunction useKnobAreaClass(props) {\n  var refElement = useRef(null);\n  var refKnobArea = useRef(null);\n  var errorContent = null;\n\n  try {\n    if (!refKnobArea.current) {\n      refKnobArea.current = new KnobArea(refElement, props);\n    } else {\n      refKnobArea.current.updateFromProps(props);\n    }\n  } catch (e) {\n    errorContent = e;\n  }\n\n  return [refElement, refKnobArea.current, errorContent];\n}\n\nfunction Knob(props) {\n  var _a = useKnobAreaClass(props),\n      refElement = _a[0],\n      knobArea = _a[1],\n      errorContent = _a[2];\n\n  var defaultStyle = {\n    width: props.diameter + \"px\",\n    height: props.diameter + \"px\",\n    borderRadius: props.diameter / 2 + \"px\",\n    position: 'relative',\n    outline: 'none',\n    boxSizing: 'border-box',\n    overflow: 'hidden'\n  };\n  var userStyle = props.knobStyle || {};\n\n  var activeStyle = __assign(__assign({}, defaultStyle), userStyle);\n\n  var knobElement = React.createElement(\"div\", {\n    ref: refElement,\n    onMouseDown: knobArea && knobArea.handleOnMouseDown,\n    onTouchStart: knobArea && knobArea.handleOnTouchStart,\n    onKeyDown: knobArea && knobArea.handleOnKeyDown,\n    onFocus: knobArea && knobArea.handleOnFocus,\n    onBlur: knobArea && knobArea.handleOnBlur,\n    style: activeStyle,\n    tabIndex: 0,\n    \"aria-valuenow\": props.value,\n    \"aria-valuemin\": props.min,\n    \"aria-valuemax\": props.max,\n    \"aria-valuetext\": props.ariaValueText,\n    \"aria-labelledby\": props.ariaLabelledBy\n  }, props.children);\n\n  if (errorContent) {\n    return React.createElement(KnobErrorWrap, {\n      error: errorContent,\n      diameter: props.diameter\n    }, knobElement);\n  }\n\n  return knobElement;\n}\n\nfunction SkinWrap(props) {\n  var defaultStyle = {\n    position: 'relative',\n    outline: 'none',\n    boxSizing: 'border-box'\n  };\n  var userStyle = props.style || {};\n\n  var activeStyle = __assign(__assign({}, defaultStyle), userStyle);\n\n  return React.createElement(\"div\", {\n    style: activeStyle\n  }, props.children);\n}\n\nfunction composeTwo(handler, callback) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    handler.apply(void 0, args);\n\n    if (callback) {\n      callback.apply(void 0, args);\n    }\n  };\n}\n\nfunction useAngleUpdater(currentValue) {\n  var angleRef = useRef(0);\n\n  var setAngleRef = function (angleVal) {\n    angleRef.current = angleVal;\n  };\n\n  var _a = useState(0),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  useEffect(function () {\n    setAngle(angleRef.current);\n  }, [angleRef.current, currentValue]);\n  return [angle, setAngleRef];\n}\n\nfunction Basic(props) {\n  var _a = useAngleUpdater(props.value),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  var _b = useState(false),\n      isActive = _b[0],\n      setIsActive = _b[1];\n\n  var theme = props.theme || {};\n  var activeColor = theme.activeColor || '#a1dca8';\n  var defaultColor = theme.defaultColor || '#3f3f3f';\n  var gradientStart = theme.gradientStart || '#f9f9f9';\n  var gradientEnd = theme.gradientEnd || '#eaeced';\n  var notchAndText = theme.notchAndText || '#3f3f3f';\n  var borderColor = isActive ? activeColor : defaultColor;\n  var angleChangeHandler = composeTwo(setAngle, props.onAngleChange);\n  var interactionChangeHandler = composeTwo(setIsActive, props.onInteractionChange);\n  return React.createElement(SkinWrap, {\n    style: props.style\n  }, React.createElement(Knob, {\n    diameter: props.diameter,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    jumpLimit: props.jumpLimit,\n    spaceMaxFromZero: props.spaceMaxFromZero,\n    ariaLabelledBy: props.ariaLabelledBy,\n    ariaValueText: props.ariaValueText,\n    knobStyle: __assign({\n      cursor: 'pointer'\n    }, props.knobStyle),\n    onAngleChange: angleChangeHandler,\n    onInteractionChange: interactionChangeHandler,\n    onValueChange: props.onValueChange\n  }, React.createElement(React.Fragment, null, React.createElement(\"svg\", {\n    viewBox: \"0 0 166.56 166.56\",\n    transform: \"rotate(\" + angle + \")\",\n    style: {\n      transform: \"rotate(\" + angle + \"deg)\"\n    }\n  }, React.createElement(\"defs\", null, React.createElement(\"linearGradient\", {\n    id: \"a\"\n  }, React.createElement(\"stop\", {\n    offset: \"0\",\n    stopColor: gradientStart,\n    stopOpacity: \"1\"\n  }), React.createElement(\"stop\", {\n    offset: \"1\",\n    stopColor: gradientEnd,\n    stopOpacity: \"1\"\n  })), React.createElement(\"filter\", {\n    id: \"b\",\n    width: \"1.11\",\n    height: \"1.11\",\n    x: \"-0.055\",\n    y: \"-0.055\",\n    colorInterpolationFilters: \"sRGB\"\n  }, React.createElement(\"feGaussianBlur\", {\n    stdDeviation: \"3.45\"\n  })), React.createElement(\"linearGradient\", {\n    id: \"c\",\n    x1: \"140.985\",\n    x2: \"63.122\",\n    y1: \"98.751\",\n    y2: \"202.317\",\n    gradientTransform: \"translate(-75.643 -328.104)\",\n    gradientUnits: \"userSpaceOnUse\",\n    xlinkHref: \"#a\"\n  })), React.createElement(\"g\", {\n    fillOpacity: \"1\",\n    transform: \"translate(-21.72 -65.22)\"\n  }, React.createElement(\"circle\", {\n    cx: \"105\",\n    cy: \"148.5\",\n    r: \"75\",\n    fill: \"#ccc\",\n    stroke: \"none\",\n    strokeDasharray: \"none\",\n    strokeMiterlimit: \"4\",\n    strokeOpacity: \"1\",\n    strokeWidth: \"17.106\",\n    filter: \"url(#b)\",\n    opacity: \"1\"\n  }), React.createElement(\"circle\", {\n    cx: \"29.357\",\n    cy: \"-179.604\",\n    r: \"70\",\n    fill: \"url(#c)\",\n    stroke: borderColor,\n    strokeDasharray: \"none\",\n    strokeMiterlimit: \"4\",\n    strokeOpacity: \"1\",\n    strokeWidth: \"1\",\n    opacity: \"1\",\n    transform: \"rotate(135.448)\"\n  }), React.createElement(\"circle\", {\n    cx: \"105.083\",\n    cy: \"88.628\",\n    r: \"4.443\",\n    fill: notchAndText,\n    stroke: \"#b1b1b1\",\n    strokeDasharray: \"none\",\n    strokeMiterlimit: \"4\",\n    strokeOpacity: \"1\",\n    strokeWidth: \"0.551\",\n    opacity: \"1\"\n  }))), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      fontSize: Math.ceil(props.diameter / 4) + \"px\",\n      position: 'absolute',\n      top: 'calc(50% - 0.6em)',\n      userSelect: 'none',\n      color: notchAndText\n    }\n  }, props.value))), props.children);\n}\n\nfunction HighContrast(props) {\n  var _a = useAngleUpdater(props.value),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  var _b = useState(false),\n      isActive = _b[0],\n      setIsActive = _b[1];\n\n  var theme = props.theme || {};\n  var activeColor = theme.activeColor || '#b56a7a';\n  var defaultColor = theme.defaultColor || '#100';\n  var bgrColor = isActive ? activeColor : defaultColor;\n  var angleChangeHandler = composeTwo(setAngle, props.onAngleChange);\n  var interactionChangeHandler = composeTwo(setIsActive, props.onInteractionChange);\n  return React.createElement(SkinWrap, {\n    style: props.style\n  }, React.createElement(Knob, {\n    diameter: props.diameter,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    jumpLimit: props.jumpLimit,\n    spaceMaxFromZero: props.spaceMaxFromZero,\n    ariaLabelledBy: props.ariaLabelledBy,\n    ariaValueText: props.ariaValueText,\n    knobStyle: __assign({\n      cursor: 'pointer'\n    }, props.knobStyle),\n    onAngleChange: angleChangeHandler,\n    onInteractionChange: interactionChangeHandler,\n    onValueChange: props.onValueChange\n  }, React.createElement(React.Fragment, null, React.createElement(\"svg\", {\n    viewBox: \"0 0 100 100\",\n    transform: \"rotate(\" + angle + \")\",\n    style: {\n      transform: \"rotate(\" + angle + \"deg)\"\n    }\n  }, React.createElement(\"path\", {\n    fill: bgrColor,\n    d: \"M50 0A50 50 0 000 50a50 50 0 0050 50 50 50 0 0050-50A50 50 0 0050 0zm0 2a48 48 0 0148 48 48 48 0 01-48 48A48 48 0 012 50 48 48 0 0150 2z\"\n  }), React.createElement(\"path\", {\n    fill: bgrColor,\n    d: \"M50 4A46 46 0 004 50a46 46 0 0046 46 46 46 0 0046-46A46 46 0 0050 4zm0 2.141a4.276 4.276 0 014.276 4.277A4.276 4.276 0 0150 14.694a4.276 4.276 0 01-4.276-4.276A4.276 4.276 0 0150 6.141z\"\n  })), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      fontSize: Math.ceil(props.diameter / 3) + \"px\",\n      fontWeight: 'bold',\n      position: 'absolute',\n      top: 'calc(50% - 0.6em)',\n      userSelect: 'none',\n      color: '#fff'\n    }\n  }, props.value))), props.children);\n}\n\nfunction White(props) {\n  var _a = useAngleUpdater(props.value),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  var _b = useState(false),\n      isActive = _b[0],\n      setIsActive = _b[1];\n\n  var theme = props.theme || {};\n  var activeNotchColor = theme.activeNotchColor || '#b56a7a';\n  var defaultNotchColor = theme.defaultNotchColor || '#f7f7f7';\n  var activeTextColor = theme.activeTextColor || '#b56a7a';\n  var defaultTextColor = theme.defaultTextColor || '#100';\n  var bgrColor = isActive ? activeTextColor : defaultTextColor;\n  var numSteps = Math.ceil((props.max - props.min) / props.step);\n  var numNotches = Math.min(numSteps, 36);\n  var activeNotch = Math.ceil(angle / Math.ceil(360 / numNotches));\n  var angleChangeHandler = composeTwo(setAngle, props.onAngleChange);\n  var interactionChangeHandler = composeTwo(setIsActive, props.onInteractionChange);\n  return React.createElement(SkinWrap, {\n    style: props.style\n  }, React.createElement(Knob, {\n    diameter: props.diameter,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    jumpLimit: props.jumpLimit,\n    spaceMaxFromZero: props.spaceMaxFromZero,\n    ariaLabelledBy: props.ariaLabelledBy,\n    ariaValueText: props.ariaValueText,\n    knobStyle: __assign({\n      cursor: 'pointer'\n    }, props.knobStyle),\n    onAngleChange: angleChangeHandler,\n    onInteractionChange: interactionChangeHandler,\n    onValueChange: props.onValueChange\n  }, React.createElement(React.Fragment, null, React.createElement(\"svg\", {\n    viewBox: \"0 0 62.463 62.463\"\n  }, React.createElement(\"defs\", null, React.createElement(\"linearGradient\", {\n    id: \"prefix__c\"\n  }, React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#fff\"\n  }), React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#b0b0b0\"\n  })), React.createElement(\"linearGradient\", {\n    id: \"prefix__a\"\n  }, React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#939393\"\n  }), React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#f0f0f0\",\n    stopOpacity: 0\n  })), React.createElement(\"linearGradient\", {\n    id: \"prefix__b\"\n  }, React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#b0b0b0\"\n  }), React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#fdfdfd\"\n  })), React.createElement(\"linearGradient\", {\n    gradientTransform: \"matrix(.84848 0 0 .84848 -25.569 29.664)\",\n    gradientUnits: \"userSpaceOnUse\",\n    y2: 136.304,\n    x2: 200.519,\n    y1: 175.459,\n    x1: 244.552,\n    id: \"prefix__e\",\n    xlinkHref: \"#prefix__b\"\n  }), React.createElement(\"linearGradient\", {\n    gradientUnits: \"userSpaceOnUse\",\n    y2: 196.319,\n    x2: 143.659,\n    y1: 184.184,\n    x1: 133.863,\n    id: \"prefix__d\",\n    xlinkHref: \"#prefix__c\"\n  })), React.createElement(\"g\", {\n    transform: \"translate(-131.196 -134.336)\"\n  }, React.createElement(\"g\", {\n    transform: \"translate(-442.372 -663.575) scale(4.37185)\"\n  }, React.createElement(\"circle\", {\n    cx: 138.339,\n    cy: 189.655,\n    r: 7.144,\n    fill: bgrColor\n  }), React.createElement(\"path\", {\n    d: \"M138.34 182.511a7.144 7.144 0 00-7.144 7.144 7.144 7.144 0 007.143 7.144 7.144 7.144 0 007.144-7.144 7.144 7.144 0 00-7.144-7.144zm0 .53a6.615 6.615 0 016.614 6.614 6.615 6.615 0 01-6.615 6.614 6.615 6.615 0 01-6.614-6.614 6.615 6.615 0 016.614-6.615z\",\n    fill: \"url(#prefix__d)\"\n  }), React.createElement(\"circle\", {\n    cx: 138.339,\n    cy: 189.655,\n    r: 6.35,\n    fill: \"#fff\"\n  })), React.createElement(\"circle\", {\n    r: 14.583,\n    cy: 192.949,\n    cx: 149.253,\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cy: 165.567,\n    cx: 162.427,\n    fill: \"#f0f0f0\",\n    r: 27.151\n  })), React.createElement(\"g\", {\n    transform: \"translate(\" + 62.463 / 2 + \" \" + 62.463 / 2 + \") scale(0.45) rotate(-90)\"\n  }, Array.from(new Array(numNotches)).map(function (_, index) {\n    var step = 2 * Math.PI / numNotches;\n    var angle = index * step;\n    var width = 2;\n    var height = 8;\n    var x = width / 2 + 62.463 * Math.cos(angle);\n    var y = height / 2 + 62.463 * Math.sin(angle);\n    var origX = x - width / 2;\n    var origY = y - height / 2;\n    var fill = activeNotch > index ? activeNotchColor : defaultNotchColor;\n    var key = 'notch_' + index;\n    return React.createElement(\"rect\", {\n      key: key,\n      id: \"r\" + index,\n      fill: fill,\n      width: width,\n      height: height,\n      x: x,\n      y: y,\n      transform: \"rotate(\" + (index * Math.ceil(360 / numNotches) + 90) + \" \" + origX + \" \" + origY + \")\"\n    });\n  }))), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      fontSize: Math.ceil(props.diameter / 4) + \"px\",\n      position: 'absolute',\n      top: 'calc(50% - 0.6em)',\n      userSelect: 'none',\n      color: bgrColor\n    }\n  }, props.value))), props.children);\n}\n/*\r\n * CSS for this component is written by @simurai\r\n * All credits goes to him\r\n * https://codepen.io/simurai/pen/DwJdq\r\n */\n\n\nvar uniqClassName = \"metal-\" + new Date().getTime();\n\nfunction Silver(props) {\n  var _a = useAngleUpdater(props.value),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  var _b = useState(uniqClassName + \"-bgr\"),\n      bgrClass = _b[0],\n      setBgrClass = _b[1];\n\n  var angleChangeHandler = composeTwo(setAngle, props.onAngleChange);\n  var interactionChangeHandler = composeTwo(function (isInteracting) {\n    isInteracting ? setBgrClass(uniqClassName + \"-bgr-active\") : setBgrClass(uniqClassName + \"-bgr\");\n  }, props.onInteractionChange);\n  var glowSpacing = 28;\n  return React.createElement(SkinWrap, {\n    style: props.style\n  }, React.createElement(Knob, {\n    diameter: props.diameter + glowSpacing,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    jumpLimit: props.jumpLimit,\n    spaceMaxFromZero: props.spaceMaxFromZero,\n    ariaLabelledBy: props.ariaLabelledBy,\n    ariaValueText: props.ariaValueText,\n    knobStyle: __assign({\n      cursor: 'pointer'\n    }, props.knobStyle),\n    onAngleChange: angleChangeHandler,\n    onInteractionChange: interactionChangeHandler,\n    onValueChange: props.onValueChange\n  }, React.createElement(React.Fragment, null, React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \".\" + uniqClassName + \"-bgr, .\" + uniqClassName + \"-bgr-active {\\n                        position: absolute;\\n                        z-index:1;\\n                        outline: none;\\n\\n                        background-color: hsl(0,0%,90%);\\n                        box-shadow: inset hsla(0,0%,15%,  1) 0  0px 0px 4px, /* border */\\n                        inset hsla(0,0%,15%, .8) 0 -1px 5px 4px, /* soft SD */\\n                        inset hsla(0,0%,0%, .25) 0 -1px 0px 7px, /* bottom SD */\\n                        inset hsla(0,0%,100%,.7) 0  2px 1px 7px, /* top HL */\\n\\n                        hsla(0,0%, 0%,.15) 0 -5px 6px 4px, /* outer SD */\\n                        hsla(0,0%,100%,.5) 0  5px 6px 4px; /* outer HL */ \\n\\n                        transition: color .2s;\\n                    }\\n                    \\n                    .\" + uniqClassName + \"-bgr-active {\\n                        color: hsl(210, 100%, 40%);\\n                        text-shadow: hsla(210,100%,20%,.3) 0 -1px 0, hsl(210,100%,85%) 0 2px 1px, hsla(200,100%,80%,1) 0 0 5px, hsla(210,100%,50%,.6) 0 0 20px;\\n                        box-shadow: \\n                            inset hsla(208, 79%, 28%,  1) 0  0px 0px 4px, /* border */\\n                            inset hsla(208,100%,15%, .4) 0 -1px 5px 4px, /* soft SD */\\n                            inset hsla(208,100%,20%,.25) 0 -1px 0px 7px, /* bottom SD */\\n                            inset hsla(208,100%,100%,.7) 0  2px 1px 7px, /* top HL */\\n\\n                            hsla(208,100%,75%, .8) 0  0px 3px 2px, /* outer SD */\\n                            hsla(208,50%,40%, .25) 0 -5px 6px 4px, /* outer SD */\\n                            hsla(208,80%,95%,   1) 0  5px 6px 4px; /* outer HL */\\n                    }\\n\\n                    .\" + uniqClassName + \"-rot {\\n                        position: absolute;\\n                        z-index: 2;\\n                        top: 7px;\\n                        left: 7px;\\n                        background-image: -webkit-radial-gradient(  50%   0%,  8% 50%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\\n                        -webkit-radial-gradient(  50% 100%, 12% 50%, hsla(0,0%,100%,.6) 0%, hsla(0,0%,100%,0) 100%),\\n                        -webkit-radial-gradient(   0%  50%, 50%  7%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\\n                        -webkit-radial-gradient( 100%  50%, 50%  5%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\\n\\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,  0%,0) 0%, hsla(0,0%,  0%,0)   3%, hsla(0,0%,  0%,.1) 3.5%),\\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0)   6%, hsla(0,0%,100%,.1) 7.5%),\\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0) 1.2%, hsla(0,0%,100%,.2) 2.2%),\\n\\n                        -webkit-radial-gradient( 50% 50%, 200% 50%, hsla(0,0%,90%,1) 5%, hsla(0,0%,85%,1) 30%, hsla(0,0%,60%,1) 100%);\\n                    }\\n\\n\\n                    .\" + uniqClassName + \"-rot:before, .\" + uniqClassName + \"-rot:after {\\n                        content: \\\"\\\";\\n                        top: 0;\\n                        left: 0;\\n                        position: absolute;\\n                        width: inherit;\\n                        height: inherit;\\n                        border-radius: inherit;\\n\\n                        /* fake conical gradients */\\n                        background-image: -webkit-radial-gradient(  50%   0%, 10% 50%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\\n                        -webkit-radial-gradient(  50% 100%, 10% 50%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\\n                        -webkit-radial-gradient(   0%  50%, 50% 10%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\\n                        -webkit-radial-gradient( 100%  50%, 50% 06%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%);\\n                    }\\n                    .\" + uniqClassName + \"-rot:before { transform: rotate( 65deg); }\\n                    .\" + uniqClassName + \"-rot:after { transform: rotate(-65deg); }\\n                    \\n                    .\" + uniqClassName + \"-notch {\\n                        position: absolute;\\n                        width: 10px;\\n                        height: 10px;\\n                        background: black;\\n                        border-radius: 5px;\\n                        top: 5px;\\n                    }\\n                    .\" + uniqClassName + \"-text {\\n                        width: 100%;\\n                        text-align: center;\\n                        font-weight: bold;\\n                        position: absolute;\\n                        top: calc(50% - 0.6em);\\n                        user-select: none;\\n                        z-index: 3;\\n                        color: #262626;\\n                        text-shadow: -1px -1px 1px #111, 1px 1px 2px #fff;\\n                    }\"), React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      width: props.diameter,\n      height: props.diameter,\n      userSelect: 'none',\n      margin: glowSpacing / 2 + \"px 0 0 \" + glowSpacing / 2 + \"px\"\n    }\n  }, React.createElement(\"div\", {\n    className: bgrClass,\n    style: {\n      width: props.diameter + \"px\",\n      height: props.diameter + \"px\",\n      borderRadius: props.diameter / 2 + \"px\"\n    }\n  }), React.createElement(\"div\", {\n    className: uniqClassName + \"-rot\",\n    style: {\n      width: props.diameter - 14 + \"px\",\n      height: props.diameter - 14 + \"px\",\n      lineHeight: props.diameter - 14 + \"px\",\n      borderRadius: (props.diameter - 14) / 2 + \"px\",\n      transform: \"rotate(\" + angle + \"deg)\"\n    }\n  }, React.createElement(\"div\", {\n    className: uniqClassName + \"-notch\",\n    style: {\n      left: (props.diameter - 24) / 2 + \"px\"\n    }\n  })), React.createElement(\"div\", {\n    className: uniqClassName + \"-text\",\n    style: {\n      fontSize: Math.ceil(props.diameter / 4) + \"px\"\n    }\n  }, props.value)))), props.children);\n}\n/*\r\n * CSS for this component is written by @Hyungsub\r\n * All credits goes to him\r\n * https://codepen.io/Hyungsub08/pen/yLBPJKW\r\n */\n\n\nvar uniqClassName$1 = \"donut-\" + new Date().getTime();\n\nfunction Donut(props) {\n  var _a = useAngleUpdater(props.value),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  var _b = useState(uniqClassName$1 + \"-center\"),\n      centerClass = _b[0],\n      setCenterClass = _b[1];\n\n  var angleChangeHandler = composeTwo(setAngle, props.onAngleChange);\n  var interactionChangeHandler = composeTwo(function (isInteracting) {\n    isInteracting ? setCenterClass(uniqClassName$1 + \"-center-active\") : setCenterClass(uniqClassName$1 + \"-center\");\n  }, props.onInteractionChange);\n  var theme = props.theme || {};\n  var donutColor = theme.donutColor || '#1BA098';\n  var defaultBgrColor = theme.bgrColor || '#e1e1e1';\n  var maxedBgrColor = theme.maxedBgrColor || '#051622';\n  var centerColor = theme.centerColor || '#fff';\n  var centerFocusedColor = theme.centerFocusedColor || '#F7F4E9';\n  var donutThickness = theme.donutThickness || 30;\n  var bgrColor = defaultBgrColor;\n\n  if (props.value === props.max) {\n    bgrColor = maxedBgrColor;\n  }\n\n  var colorBgr = bgrColor;\n  var colorOne = donutColor;\n  var colorTwo = donutColor;\n  var angleOne = 90;\n  var angleTwo = angle;\n\n  if (angle < 180) {\n    colorBgr = donutColor;\n    colorOne = bgrColor;\n    colorTwo = bgrColor;\n    angleOne = angle + 90;\n    angleTwo = 0;\n  }\n\n  return React.createElement(SkinWrap, {\n    style: props.style\n  }, React.createElement(Knob, {\n    diameter: props.diameter,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    jumpLimit: props.jumpLimit,\n    spaceMaxFromZero: props.spaceMaxFromZero,\n    ariaLabelledBy: props.ariaLabelledBy,\n    ariaValueText: props.ariaValueText,\n    knobStyle: __assign({\n      cursor: 'pointer'\n    }, props.knobStyle),\n    onAngleChange: angleChangeHandler,\n    onInteractionChange: interactionChangeHandler,\n    onValueChange: props.onValueChange\n  }, React.createElement(React.Fragment, null, React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \".\" + uniqClassName$1 + \" {\\n                      position: relative;\\n                      border-radius: 50%;\\n                      overflow: hidden;\\n                    }\\n                    .\" + uniqClassName$1 + \"-slice-one, .\" + uniqClassName$1 + \"-slice-two {\\n                      position: absolute;\\n                      top: 0;\\n                      left: 0;\\n                      width: 100%;\\n                      height: 100%;\\n                    }\\n                    .\" + uniqClassName$1 + \"-center, .\" + uniqClassName$1 + \"-center-active {\\n                      position: absolute;\\n                      border-radius: 50%;\\n                    }\\n                    .\" + uniqClassName$1 + \"-center {\\n                      background: \" + centerColor + \";\\n                    }\\n                    .\" + uniqClassName$1 + \"-center-active {\\n                      background: \" + centerFocusedColor + \";\\n                    }\\n                    .\" + uniqClassName$1 + \"-center span {\\n                      display: block;\\n                      text-align: center;\\n                    }\\n                    .\" + uniqClassName$1 + \"-text {\\n                        width: 100%;\\n                        text-align: center;\\n                        font-weight: bold;\\n                        position: absolute;\\n                        top: calc(50% - 0.6em);\\n                        user-select: none;\\n                        z-index: 3;\\n                    }\"), React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      width: props.diameter,\n      height: props.diameter,\n      userSelect: 'none'\n    }\n  }, React.createElement(\"div\", {\n    className: uniqClassName$1,\n    style: {\n      width: props.diameter + \"px\",\n      height: props.diameter + \"px\",\n      background: colorBgr\n    }\n  }, React.createElement(\"div\", {\n    className: uniqClassName$1 + \"-slice-one\",\n    style: {\n      clip: \"rect(0 \" + props.diameter + \"px \" + props.diameter / 2 + \"px 0)\",\n      transform: \"rotate(\" + angleOne + \"deg)\",\n      background: colorOne\n    }\n  }), React.createElement(\"div\", {\n    className: uniqClassName$1 + \"-slice-two\",\n    style: {\n      clip: \"rect(0 \" + props.diameter / 2 + \"px \" + props.diameter + \"px 0)\",\n      transform: \"rotate(\" + angleTwo + \"deg)\",\n      background: colorTwo\n    }\n  }), React.createElement(\"div\", {\n    className: centerClass,\n    style: {\n      top: donutThickness + \"px\",\n      left: donutThickness + \"px\",\n      width: props.diameter - donutThickness * 2 + \"px\",\n      height: props.diameter - donutThickness * 2 + \"px\"\n    }\n  })), React.createElement(\"div\", {\n    className: uniqClassName$1 + \"-text\",\n    style: {\n      color: donutColor,\n      fontSize: Math.ceil(props.diameter / 4) + \"px\"\n    }\n  }, props.value)))), props.children);\n}\n\nexport default Knob;\nexport { Basic, Donut, HighContrast, Silver, SkinWrap, White, composeTwo, useAngleUpdater };","map":{"version":3,"mappings":"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","names":["refElement","props","event","_this","addWindowEventListeners","pageY","clientX","clientY","updateAreaLocation","pageX","updateAngleValue","isInteracting","removeWindowEventListeners","changedTouches","length","keyCode","key","value","step","max","angle","angleFromValue","min","onAngleChange","onValueChange","onInteractionChange","_locationX","_locationY","_isInteracting","windowEventListeners","mouse","handleOnMouseMove","handleOnMouseUp","touch","handleOnTouchMove","handleOnTouchEnd","updateFromProps","KnobArea","Error","diameter","spaceMaxFromZero","undefined","jumpLimit","Object","_angle","val","_value","newValue","getValueWithinJumpLimit","numSteps","limit","Math","ceil","abs","el","window","getComputedStyle","x","y","scaleX","scaleY","style","transform","webkitTransform","mat","match","scaleX_1","parseFloat","split","scaleY_1","eventCoords","areaRadius","current","transformXY","getComputedTransformXY","tagName","toUpperCase","xScroll","scrollLeft","document","documentElement","yScroll","scrollTop","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent","rad","atan2","deg","PI","angleAsPercent","valsDistribution","totalValue","valuesList","Array","from","map","_","i","closest","reduce","prev","curr","requestAnimationFrame","updatedAngle","calcDegreeOfRotation","valueFromAngle","group","forEach","handlerData","handler","addEventListener","eventName","removeEventListener","KnobErrorWrap","console","error","React","width","height","borderRadius","position","outline","boxSizing","overflow","fontSize","fontWeight","color","textAlign","zIndex","paddingTop","background","pointerEvents","children","useKnobAreaClass","useRef","refKnobArea","errorContent","e","Knob","knobArea","defaultStyle","userStyle","knobStyle","activeStyle","knobElement","ref","onMouseDown","handleOnMouseDown","onTouchStart","handleOnTouchStart","onKeyDown","handleOnKeyDown","onFocus","handleOnFocus","onBlur","handleOnBlur","tabIndex","ariaValueText","ariaLabelledBy","SkinWrap","composeTwo","callback","args","useAngleUpdater","currentValue","angleRef","setAngleRef","angleVal","useState","setAngle","useEffect","Basic","isActive","setIsActive","theme","activeColor","defaultColor","gradientStart","gradientEnd","notchAndText","borderColor","angleChangeHandler","interactionChangeHandler","cursor","viewBox","id","offset","stopColor","stopOpacity","colorInterpolationFilters","stdDeviation","x1","x2","y1","y2","gradientTransform","gradientUnits","xlinkHref","fillOpacity","cx","cy","r","fill","stroke","strokeDasharray","strokeMiterlimit","strokeOpacity","strokeWidth","filter","opacity","top","userSelect","HighContrast","bgrColor","d","White","activeNotchColor","defaultNotchColor","activeTextColor","defaultTextColor","numNotches","activeNotch","index","cos","sin","origX","origY","uniqClassName","Date","getTime","Silver","bgrClass","setBgrClass","glowSpacing","type","margin","className","lineHeight","left","Donut","centerClass","setCenterClass","donutColor","defaultBgrColor","maxedBgrColor","centerColor","centerFocusedColor","donutThickness","colorBgr","colorOne","colorTwo","angleOne","angleTwo","clip"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/KnobArea.ts","/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/KnobErrorWrap.tsx","/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/Knob.tsx","/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/skins/layout/SkinWrap.tsx","/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/util/composeTwo.ts","/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/util/useAngleUpdater.ts","/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/skins/Basic.tsx","/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/skins/HighContrast.tsx","/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/skins/White.tsx","/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/skins/Silver.tsx","/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/react-dial-knob/src/skins/Donut.tsx"],"sourcesContent":["import { KnobProps } from './Knob'\n\nclass KnobArea {\n    onAngleChange: (number) => void\n    onValueChange: (number) => void\n    onInteractionChange: (boolean) => void\n    min: number\n    max: number\n    step: number\n    diameter: number\n    spaceMaxFromZero: boolean\n    jumpLimit?: number\n    refElement: React.RefObject<HTMLDivElement>\n    windowEventListeners: {\n        mouse: Array<['mousemove' | 'mouseup', EventListener]>\n        touch: Array<['touchmove' | 'touchend', EventListener]>\n    }\n\n    private _isInteracting: boolean\n    private _value: number\n    private _angle: number\n    private _locationX: number\n    private _locationY: number\n\n    constructor(refElement: React.RefObject<HTMLDivElement>, props: KnobProps) {\n        this.onAngleChange = props.onAngleChange\n        this.onValueChange = props.onValueChange\n        this.onInteractionChange = props.onInteractionChange\n        this._locationX = 0\n        this._locationY = 0\n        this.refElement = refElement\n\n        this._isInteracting = false\n\n        this.windowEventListeners = {\n            mouse: [\n                ['mousemove', this.handleOnMouseMove],\n                ['mouseup', this.handleOnMouseUp],\n            ],\n            touch: [\n                ['touchmove', this.handleOnTouchMove],\n                ['touchend', this.handleOnTouchEnd],\n            ],\n        }\n\n        this.updateFromProps(props)\n    }\n\n    updateFromProps(props: KnobProps): void {\n        if (props.max <= props.min || props.max < props.min + props.step) {\n            throw new Error(\n                'Max value should be bigger or equal to min+step value.',\n            )\n        }\n\n        this.min = props.min\n        this.max = props.max\n        this.step = props.step\n        this.diameter = props.diameter\n\n        this.onAngleChange = props.onAngleChange || this.onAngleChange\n        this.onValueChange = props.onValueChange || this.onValueChange\n        this.onInteractionChange =\n            props.onInteractionChange || this.onInteractionChange\n        this.spaceMaxFromZero =\n            props.spaceMaxFromZero !== undefined ? props.spaceMaxFromZero : true\n\n        if (props.jumpLimit) {\n            this.jumpLimit = props.jumpLimit\n        }\n\n        if (props.value !== this.value) {\n            if (props.min > this.value || props.value < props.min) {\n                this.value = props.min\n            } else if (props.max < this.value || props.value > props.max) {\n                this.value = props.max\n            } else {\n                this.value = props.value\n            }\n            this.angle = this.angleFromValue(this.value)\n        }\n\n        if (this.value % this.step || (this.max - this.min) % this.step) {\n            throw new Error(\n                'Value and (max - min) should be divisible by step.',\n            )\n        }\n    }\n\n    get angle(): number {\n        return this._angle\n    }\n\n    set angle(val: number) {\n        if (this._angle === val) {\n            return\n        }\n        this._angle = val\n        if (this.onAngleChange) {\n            this.onAngleChange(this._angle)\n        }\n    }\n\n    get value(): number {\n        return this._value\n    }\n\n    set value(val: number) {\n        const newValue = this.getValueWithinJumpLimit(val)\n        if (this._value === newValue) {\n            return\n        }\n        this._value = newValue\n        if (this.onValueChange) {\n            this.onValueChange(this._value)\n        }\n    }\n\n    get isInteracting(): boolean {\n        return this._isInteracting\n    }\n\n    set isInteracting(val: boolean) {\n        if (this._isInteracting === val) {\n            return\n        }\n        this._isInteracting = val\n        if (this.onInteractionChange) {\n            this.onInteractionChange(this._isInteracting)\n        }\n    }\n\n    get numSteps(): number {\n        return (this.max - this.min) / this.step\n    }\n\n    get valsDistribution(): number {\n        if (this.spaceMaxFromZero) {\n            return 360 / (this.numSteps + 1)\n        }\n        return 360 / this.numSteps\n    }\n\n    private getValueWithinJumpLimit(newValue: number): number {\n        if (!this.jumpLimit) {\n            return newValue\n        }\n        const limit = Math.max(\n            this.step,\n            Math.ceil((this.max - this.min) * this.jumpLimit),\n        )\n        if (Math.abs(newValue - this.value) > limit) {\n            if (\n                newValue > this.max * 0.9 &&\n                this.value < this.min + this.max * 0.1\n            ) {\n                return this.min\n            }\n            if (\n                newValue < this.min + this.max * 0.1 &&\n                this.value > this.max * 0.9\n            ) {\n                return this.max\n            }\n            return this.value\n        }\n        return newValue\n    }\n\n    private getComputedTransformXY(\n        el: HTMLElement,\n    ): { x: number; y: number; scaleX: number; scaleY: number } {\n        if (!window.getComputedStyle || !el) {\n            return { x: 0, y: 0, scaleX: 1, scaleY: 1 }\n        }\n\n        const style = window.getComputedStyle(el)\n        const transform = style.transform || style.webkitTransform\n        if (!transform) {\n            return { x: 0, y: 0, scaleX: 1, scaleY: 1 }\n        }\n        let mat = transform.match(/^matrix3d\\((.+)\\)$/)\n        if (mat) {\n            const scaleX = parseFloat(mat[1].split(', ')[0])\n            const scaleY = parseFloat(mat[1].split(', ')[5])\n            return {\n                x: parseFloat(mat[1].split(', ')[12]),\n                y: parseFloat(mat[1].split(', ')[13]),\n                scaleX,\n                scaleY,\n            }\n        }\n\n        mat = transform.match(/^matrix\\((.+)\\)$/)\n        const scaleX = mat ? parseFloat(mat[1].split(', ')[0]) : 1\n        const scaleY = mat ? parseFloat(mat[1].split(', ')[3]) : 1\n        return {\n            x: mat ? parseFloat(mat[1].split(', ')[4]) : 0,\n            y: mat ? parseFloat(mat[1].split(', ')[5]) : 0,\n            scaleX,\n            scaleY,\n        }\n    }\n\n    updateAreaLocation(eventCoords: {\n        pageX: number\n        pageY: number\n        clientX: number\n        clientY: number\n    }): void {\n        const areaRadius = this.diameter / 2\n        // See article with explanation at: https://www.kirupa.com/html5/get_element_position_using_javascript.htm\n        let x = 0\n        let y = 0\n        let el = this.refElement.current as HTMLElement\n        let transformXY = this.getComputedTransformXY(el)\n        while (el) {\n            if (el.tagName.toUpperCase() === 'BODY') {\n                // deal with browser quirks with body/window/document and page scroll\n                const xScroll =\n                    el.scrollLeft || document.documentElement.scrollLeft\n                const yScroll =\n                    el.scrollTop || document.documentElement.scrollTop\n\n                x += el.offsetLeft - xScroll + el.clientLeft\n                y += el.offsetTop - yScroll + el.clientTop\n            } else {\n                // for all other non-BODY elements\n                x += el.offsetLeft - el.scrollLeft + el.clientLeft\n                y += el.offsetTop - el.scrollTop + el.clientTop\n            }\n            x += transformXY.x\n            y += transformXY.y\n            el = el.offsetParent as HTMLElement\n            transformXY = this.getComputedTransformXY(el)\n        }\n\n        this._locationX = x + areaRadius\n        this._locationY = y + areaRadius\n\n        this._locationX += eventCoords.pageX - eventCoords.clientX\n        this._locationY += eventCoords.pageY - eventCoords.clientY\n    }\n\n    calcDegreeOfRotation(pageX: number, pageY: number): number {\n        const rad = Math.atan2(pageX - this._locationX, pageY - this._locationY)\n        const deg = Math.abs(rad * (180 / Math.PI) - 180)\n        return deg\n    }\n\n    valueFromAngle(angle: number): number {\n        const angleAsPercent = angle / (this.numSteps * this.valsDistribution)\n        const totalValue = this.numSteps * this.step\n        const val = this.min + angleAsPercent * totalValue\n        if (val > this.max + this.step / 2) {\n            return this.min\n        }\n        const valuesList = Array.from(new Array(this.numSteps + 1)).map(\n            (_, i) => {\n                return this.min + i * this.step\n            },\n        )\n        const closest = valuesList.reduce(function (prev, curr) {\n            return Math.abs(curr - val) < Math.abs(prev - val) ? curr : prev\n        })\n        return closest\n    }\n\n    angleFromValue(value: number): number {\n        return Math.ceil(\n            ((value - this.min) / this.step) * this.valsDistribution,\n        )\n    }\n\n    updateAngleValue(pageX: number, pageY: number): void {\n        requestAnimationFrame(() => {\n            const updatedAngle = this.calcDegreeOfRotation(pageX, pageY)\n            this.value = this.valueFromAngle(updatedAngle)\n            this.angle = this.angleFromValue(this.value)\n        })\n    }\n\n    handleOnMouseDown = (event: React.MouseEvent): void => {\n        this.addWindowEventListeners('mouse')\n        const { pageX, pageY, clientX, clientY } = event\n        this.updateAreaLocation({ pageX, pageY, clientX, clientY })\n        this.updateAngleValue(pageX, pageY)\n    }\n\n    handleOnMouseMove = (event: MouseEvent): void => {\n        if (!this.isInteracting) {\n            return\n        }\n        const { pageX, pageY } = event\n        this.updateAngleValue(pageX, pageY)\n    }\n\n    handleOnMouseUp = (): void => {\n        this.removeWindowEventListeners('mouse')\n    }\n\n    handleOnTouchStart = (event: React.TouchEvent): void => {\n        this.addWindowEventListeners('touch')\n        if ('changedTouches' in event && event.changedTouches.length === 1) {\n            const { pageX, pageY, clientX, clientY } = event.changedTouches[0]\n            this.updateAreaLocation({ pageX, pageY, clientX, clientY })\n            this.updateAngleValue(pageX, pageY)\n        }\n    }\n\n    handleOnTouchMove = (event: TouchEvent): void => {\n        if (!this.isInteracting) {\n            return\n        }\n        if ('changedTouches' in event && event.changedTouches.length === 1) {\n            const { pageX, pageY } = event.changedTouches[0]\n            this.updateAngleValue(pageX, pageY)\n        }\n    }\n\n    handleOnTouchEnd = (): void => {\n        this.removeWindowEventListeners('touch')\n    }\n\n    handleOnFocus = (): void => {\n        this.isInteracting = true\n    }\n\n    handleOnBlur = (): void => {\n        this.isInteracting = false\n    }\n\n    handleOnKeyDown = (event: React.KeyboardEvent): void => {\n        const keyCode =\n            event.key || { 38: 'ArrowUp', 40: 'ArrowDown' }[event.keyCode]\n        if (keyCode === 'ArrowUp' && this.value + this.step <= this.max) {\n            this.value += this.step\n            this.angle = this.angleFromValue(this.value)\n        } else if (\n            keyCode === 'ArrowDown' &&\n            this.value - this.step >= this.min\n        ) {\n            this.value -= this.step\n            this.angle = this.angleFromValue(this.value)\n        }\n    }\n\n    addWindowEventListeners(group: 'mouse' | 'touch'): void {\n        this.isInteracting = true\n        this.windowEventListeners[group].forEach(\n            (handlerData: [string, EventListener]) => {\n                const [eventName, handler] = handlerData\n                window.addEventListener(eventName, handler)\n            },\n        )\n    }\n\n    removeWindowEventListeners(group: 'mouse' | 'touch'): void {\n        this.isInteracting = false\n        this.windowEventListeners[group].forEach(\n            (handlerData: [string, EventListener]) => {\n                const [eventName, handler] = handlerData\n                window.removeEventListener(eventName, handler)\n            },\n        )\n    }\n}\n\nexport default KnobArea\n","import React from 'react'\n\ninterface ErrorAreaProps {\n    error: Error\n    diameter: number\n    children?: React.ReactNode\n}\n\nexport default function KnobErrorWrap(props: ErrorAreaProps): JSX.Element {\n    console && console.error(props.error)\n\n    return (\n        <div\n            style={{\n                width: `${props.diameter}px`,\n                height: `${props.diameter}px`,\n                borderRadius: `${props.diameter / 2}px`,\n                position: 'relative' as const,\n                outline: 'none',\n                boxSizing: 'border-box' as const,\n                overflow: 'hidden',\n            }}\n        >\n            <div\n                style={{\n                    fontSize: '22px',\n                    fontWeight: 'bold',\n                    color: 'red',\n                    textAlign: 'center',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    zIndex: 999,\n                    paddingTop: 'calc(50% - 0.5em)',\n                    background: 'rgba(0, 0, 0, 0.2)',\n                    pointerEvents: 'none',\n                }}\n            >\n                💣\n            </div>\n            {props.children}\n        </div>\n    )\n}\n","import React, { useRef } from 'react'\nimport KnobArea from './KnobArea'\nimport KnobErrorWrap from './KnobErrorWrap'\n\nexport interface KnobProps {\n    diameter: number\n    value: number\n    min: number\n    max: number\n    step: number\n    jumpLimit?: number\n    spaceMaxFromZero?: boolean\n    ariaLabelledBy?: string\n    ariaValueText?: string\n    knobStyle?: React.CSSProperties\n    children?: React.ReactNode\n    onAngleChange?: (angle: number) => void\n    onInteractionChange?: (isInteracting: boolean) => void\n    onValueChange?: (value: number) => void\n}\n\nexport function useKnobAreaClass(\n    props: KnobProps,\n): [React.RefObject<HTMLDivElement>, KnobArea | null, Error | null] {\n    const refElement = useRef(null)\n    const refKnobArea = useRef<KnobArea>(null)\n    let errorContent: null | Error = null\n    try {\n        if (!refKnobArea.current) {\n            refKnobArea.current = new KnobArea(refElement, props)\n        } else {\n            refKnobArea.current.updateFromProps(props)\n        }\n    } catch (e) {\n        errorContent = e\n    }\n    return [refElement, refKnobArea.current, errorContent]\n}\n\nexport default function Knob(props: KnobProps): JSX.Element {\n    const [refElement, knobArea, errorContent] = useKnobAreaClass(props)\n    const defaultStyle = {\n        width: `${props.diameter}px`,\n        height: `${props.diameter}px`,\n        borderRadius: `${props.diameter / 2}px`,\n        position: 'relative' as const,\n        outline: 'none',\n        boxSizing: 'border-box' as const,\n        overflow: 'hidden',\n    }\n    const userStyle = props.knobStyle || {}\n    const activeStyle = { ...defaultStyle, ...userStyle }\n    const knobElement = (\n        <div\n            ref={refElement}\n            onMouseDown={knobArea && knobArea.handleOnMouseDown}\n            onTouchStart={knobArea && knobArea.handleOnTouchStart}\n            onKeyDown={knobArea && knobArea.handleOnKeyDown}\n            onFocus={knobArea && knobArea.handleOnFocus}\n            onBlur={knobArea && knobArea.handleOnBlur}\n            style={activeStyle}\n            tabIndex={0}\n            aria-valuenow={props.value}\n            aria-valuemin={props.min}\n            aria-valuemax={props.max}\n            aria-valuetext={props.ariaValueText}\n            aria-labelledby={props.ariaLabelledBy}\n        >\n            {props.children}\n        </div>\n    )\n    if (errorContent) {\n        return (\n            <KnobErrorWrap error={errorContent} diameter={props.diameter}>\n                {knobElement}\n            </KnobErrorWrap>\n        )\n    }\n    return knobElement\n}\n","import React from 'react'\n\ninterface SkinWrapProps {\n    children: React.ReactNode\n    style?: React.CSSProperties\n}\n\nexport default function SkinWrap(props: SkinWrapProps): JSX.Element {\n    const defaultStyle = {\n        position: 'relative' as const,\n        outline: 'none',\n        boxSizing: 'border-box' as const,\n    }\n    const userStyle = props.style || {}\n    const activeStyle = { ...defaultStyle, ...userStyle }\n    return <div style={activeStyle}>{props.children}</div>\n}\n","export default function composeTwo<T>(\n    handler: (...args: T[]) => void,\n    callback?: (...args: T[]) => void,\n): (...args: T[]) => void {\n    return function (...args): void {\n        handler(...args)\n        if (callback) {\n            callback(...args)\n        }\n    }\n}\n","import { useState, useRef, useEffect } from 'react'\n\nexport default function useAngleUpdater(\n    currentValue: number,\n): [number, (number) => void] {\n    const angleRef = useRef(0)\n    const setAngleRef = (angleVal: number): void => {\n        angleRef.current = angleVal\n    }\n    const [angle, setAngle] = useState(0)\n    useEffect(() => {\n        setAngle(angleRef.current)\n    }, [angleRef.current, currentValue])\n    return [angle, setAngleRef]\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\nimport useAngleUpdater from '../util/useAngleUpdater'\n\nexport interface BasicTheme {\n    defaultColor?: string\n    activeColor?: string\n    gradientStart?: string\n    gradientEnd?: string\n    notchAndText?: string\n}\n\nexport default function Basic(props: SkinProps<BasicTheme>): JSX.Element {\n    const [angle, setAngle] = useAngleUpdater(props.value)\n    const [isActive, setIsActive] = useState(false)\n    const theme = props.theme || {}\n    const activeColor = theme.activeColor || '#a1dca8'\n    const defaultColor = theme.defaultColor || '#3f3f3f'\n    const gradientStart = theme.gradientStart || '#f9f9f9'\n    const gradientEnd = theme.gradientEnd || '#eaeced'\n    const notchAndText = theme.notchAndText || '#3f3f3f'\n    const borderColor = isActive ? activeColor : defaultColor\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(\n        setIsActive,\n        props.onInteractionChange,\n    )\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                jumpLimit={props.jumpLimit}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <svg\n                        viewBox=\"0 0 166.56 166.56\"\n                        transform={`rotate(${angle})`}\n                        style={{ transform: `rotate(${angle}deg)` }}\n                    >\n                        <defs>\n                            <linearGradient id=\"a\">\n                                <stop\n                                    offset=\"0\"\n                                    stopColor={gradientStart}\n                                    stopOpacity=\"1\"\n                                ></stop>\n                                <stop\n                                    offset=\"1\"\n                                    stopColor={gradientEnd}\n                                    stopOpacity=\"1\"\n                                ></stop>\n                            </linearGradient>\n                            <filter\n                                id=\"b\"\n                                width=\"1.11\"\n                                height=\"1.11\"\n                                x=\"-0.055\"\n                                y=\"-0.055\"\n                                colorInterpolationFilters=\"sRGB\"\n                            >\n                                <feGaussianBlur stdDeviation=\"3.45\"></feGaussianBlur>\n                            </filter>\n                            <linearGradient\n                                id=\"c\"\n                                x1=\"140.985\"\n                                x2=\"63.122\"\n                                y1=\"98.751\"\n                                y2=\"202.317\"\n                                gradientTransform=\"translate(-75.643 -328.104)\"\n                                gradientUnits=\"userSpaceOnUse\"\n                                xlinkHref=\"#a\"\n                            ></linearGradient>\n                        </defs>\n                        <g fillOpacity=\"1\" transform=\"translate(-21.72 -65.22)\">\n                            <circle\n                                cx=\"105\"\n                                cy=\"148.5\"\n                                r=\"75\"\n                                fill=\"#ccc\"\n                                stroke=\"none\"\n                                strokeDasharray=\"none\"\n                                strokeMiterlimit=\"4\"\n                                strokeOpacity=\"1\"\n                                strokeWidth=\"17.106\"\n                                filter=\"url(#b)\"\n                                opacity=\"1\"\n                            ></circle>\n                            <circle\n                                cx=\"29.357\"\n                                cy=\"-179.604\"\n                                r=\"70\"\n                                fill=\"url(#c)\"\n                                stroke={borderColor}\n                                strokeDasharray=\"none\"\n                                strokeMiterlimit=\"4\"\n                                strokeOpacity=\"1\"\n                                strokeWidth=\"1\"\n                                opacity=\"1\"\n                                transform=\"rotate(135.448)\"\n                            ></circle>\n                            <circle\n                                cx=\"105.083\"\n                                cy=\"88.628\"\n                                r=\"4.443\"\n                                fill={notchAndText}\n                                stroke=\"#b1b1b1\"\n                                strokeDasharray=\"none\"\n                                strokeMiterlimit=\"4\"\n                                strokeOpacity=\"1\"\n                                strokeWidth=\"0.551\"\n                                opacity=\"1\"\n                            ></circle>\n                        </g>\n                    </svg>\n                    <div\n                        style={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            position: 'absolute',\n                            top: 'calc(50% - 0.6em)',\n                            userSelect: 'none',\n                            color: notchAndText,\n                        }}\n                    >\n                        {props.value}\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\nimport useAngleUpdater from '../util/useAngleUpdater'\n\nexport interface HighContrastTheme {\n    defaultColor?: string\n    activeColor?: string\n}\n\nexport default function HighContrast(\n    props: SkinProps<HighContrastTheme>,\n): JSX.Element {\n    const [angle, setAngle] = useAngleUpdater(props.value)\n    const [isActive, setIsActive] = useState(false)\n    const theme = props.theme || {}\n    const activeColor = theme.activeColor || '#b56a7a'\n    const defaultColor = theme.defaultColor || '#100'\n    const bgrColor = isActive ? activeColor : defaultColor\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(\n        setIsActive,\n        props.onInteractionChange,\n    )\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                jumpLimit={props.jumpLimit}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <svg\n                        viewBox=\"0 0 100 100\"\n                        transform={`rotate(${angle})`}\n                        style={{ transform: `rotate(${angle}deg)` }}\n                    >\n                        <path\n                            fill={bgrColor}\n                            d=\"M50 0A50 50 0 000 50a50 50 0 0050 50 50 50 0 0050-50A50 50 0 0050 0zm0 2a48 48 0 0148 48 48 48 0 01-48 48A48 48 0 012 50 48 48 0 0150 2z\"\n                        />\n                        <path\n                            fill={bgrColor}\n                            d=\"M50 4A46 46 0 004 50a46 46 0 0046 46 46 46 0 0046-46A46 46 0 0050 4zm0 2.141a4.276 4.276 0 014.276 4.277A4.276 4.276 0 0150 14.694a4.276 4.276 0 01-4.276-4.276A4.276 4.276 0 0150 6.141z\"\n                        />\n                    </svg>\n                    <div\n                        style={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: `${Math.ceil(props.diameter / 3)}px`,\n                            fontWeight: 'bold',\n                            position: 'absolute',\n                            top: 'calc(50% - 0.6em)',\n                            userSelect: 'none',\n                            color: '#fff',\n                        }}\n                    >\n                        {props.value}\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\nimport useAngleUpdater from '../util/useAngleUpdater'\n\nexport interface WhiteTheme {\n    activeNotchColor?: string\n    defaultNotchColor?: string\n    activeTextColor?: string\n    defaultTextColor?: string\n}\n\nexport default function White(props: SkinProps<WhiteTheme>): JSX.Element {\n    const [angle, setAngle] = useAngleUpdater(props.value)\n    const [isActive, setIsActive] = useState(false)\n    const theme = props.theme || {}\n    const activeNotchColor = theme.activeNotchColor || '#b56a7a'\n    const defaultNotchColor = theme.defaultNotchColor || '#f7f7f7'\n    const activeTextColor = theme.activeTextColor || '#b56a7a'\n    const defaultTextColor = theme.defaultTextColor || '#100'\n    const bgrColor = isActive ? activeTextColor : defaultTextColor\n    const numSteps = Math.ceil((props.max - props.min) / props.step)\n    const numNotches = Math.min(numSteps, 36)\n    const activeNotch = Math.ceil(angle / Math.ceil(360 / numNotches))\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(\n        setIsActive,\n        props.onInteractionChange,\n    )\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                jumpLimit={props.jumpLimit}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <svg viewBox=\"0 0 62.463 62.463\">\n                        <defs>\n                            <linearGradient id=\"prefix__c\">\n                                <stop offset={0} stopColor=\"#fff\" />\n                                <stop offset={1} stopColor=\"#b0b0b0\" />\n                            </linearGradient>\n                            <linearGradient id=\"prefix__a\">\n                                <stop offset={0} stopColor=\"#939393\" />\n                                <stop\n                                    offset={1}\n                                    stopColor=\"#f0f0f0\"\n                                    stopOpacity={0}\n                                />\n                            </linearGradient>\n                            <linearGradient id=\"prefix__b\">\n                                <stop offset={0} stopColor=\"#b0b0b0\" />\n                                <stop offset={1} stopColor=\"#fdfdfd\" />\n                            </linearGradient>\n                            <linearGradient\n                                gradientTransform=\"matrix(.84848 0 0 .84848 -25.569 29.664)\"\n                                gradientUnits=\"userSpaceOnUse\"\n                                y2={136.304}\n                                x2={200.519}\n                                y1={175.459}\n                                x1={244.552}\n                                id=\"prefix__e\"\n                                xlinkHref=\"#prefix__b\"\n                            />\n                            <linearGradient\n                                gradientUnits=\"userSpaceOnUse\"\n                                y2={196.319}\n                                x2={143.659}\n                                y1={184.184}\n                                x1={133.863}\n                                id=\"prefix__d\"\n                                xlinkHref=\"#prefix__c\"\n                            />\n                        </defs>\n                        <g transform=\"translate(-131.196 -134.336)\">\n                            <g transform=\"translate(-442.372 -663.575) scale(4.37185)\">\n                                <circle\n                                    cx={138.339}\n                                    cy={189.655}\n                                    r={7.144}\n                                    fill={bgrColor}\n                                />\n                                <path\n                                    d=\"M138.34 182.511a7.144 7.144 0 00-7.144 7.144 7.144 7.144 0 007.143 7.144 7.144 7.144 0 007.144-7.144 7.144 7.144 0 00-7.144-7.144zm0 .53a6.615 6.615 0 016.614 6.614 6.615 6.615 0 01-6.615 6.614 6.615 6.615 0 01-6.614-6.614 6.615 6.615 0 016.614-6.615z\"\n                                    fill=\"url(#prefix__d)\"\n                                />\n                                <circle\n                                    cx={138.339}\n                                    cy={189.655}\n                                    r={6.35}\n                                    fill=\"#fff\"\n                                />\n                            </g>\n                            <circle\n                                r={14.583}\n                                cy={192.949}\n                                cx={149.253}\n                                fill=\"none\"\n                            />\n                            <circle\n                                cy={165.567}\n                                cx={162.427}\n                                fill=\"#f0f0f0\"\n                                r={27.151}\n                            />\n                        </g>\n                        <g\n                            transform={`translate(${62.463 / 2} ${\n                                62.463 / 2\n                            }) scale(0.45) rotate(-90)`}\n                        >\n                            {Array.from(new Array(numNotches)).map(\n                                (_, index) => {\n                                    const step = (2 * Math.PI) / numNotches\n                                    const angle = index * step\n                                    const width = 2\n                                    const height = 8\n                                    const x =\n                                        width / 2 + 62.463 * Math.cos(angle)\n                                    const y =\n                                        height / 2 + 62.463 * Math.sin(angle)\n                                    const origX = x - width / 2\n                                    const origY = y - height / 2\n                                    const fill =\n                                        activeNotch > index\n                                            ? activeNotchColor\n                                            : defaultNotchColor\n                                    const key = 'notch_' + index\n                                    return (\n                                        <rect\n                                            key={key}\n                                            id={`r${index}`}\n                                            fill={fill}\n                                            width={width}\n                                            height={height}\n                                            x={x}\n                                            y={y}\n                                            transform={`rotate(${\n                                                index *\n                                                    Math.ceil(\n                                                        360 / numNotches,\n                                                    ) +\n                                                90\n                                            } ${origX} ${origY})`}\n                                        />\n                                    )\n                                },\n                            )}\n                        </g>\n                    </svg>\n                    <div\n                        style={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            position: 'absolute',\n                            top: 'calc(50% - 0.6em)',\n                            userSelect: 'none',\n                            color: bgrColor,\n                        }}\n                    >\n                        {props.value}\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\nimport useAngleUpdater from '../util/useAngleUpdater'\n\n/*\n * CSS for this component is written by @simurai\n * All credits goes to him\n * https://codepen.io/simurai/pen/DwJdq\n */\n\nconst uniqClassName = `metal-${new Date().getTime()}`\n\nexport default function Silver(props: SkinProps<unknown>): JSX.Element {\n    const [angle, setAngle] = useAngleUpdater(props.value)\n    const [bgrClass, setBgrClass] = useState(`${uniqClassName}-bgr`)\n\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>((isInteracting) => {\n        isInteracting\n            ? setBgrClass(`${uniqClassName}-bgr-active`)\n            : setBgrClass(`${uniqClassName}-bgr`)\n    }, props.onInteractionChange)\n    const glowSpacing = 28\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter + glowSpacing}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                jumpLimit={props.jumpLimit}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <style type=\"text/css\">\n                        {`.${uniqClassName}-bgr, .${uniqClassName}-bgr-active {\n                        position: absolute;\n                        z-index:1;\n                        outline: none;\n\n                        background-color: hsl(0,0%,90%);\n                        box-shadow: inset hsla(0,0%,15%,  1) 0  0px 0px 4px, /* border */\n                        inset hsla(0,0%,15%, .8) 0 -1px 5px 4px, /* soft SD */\n                        inset hsla(0,0%,0%, .25) 0 -1px 0px 7px, /* bottom SD */\n                        inset hsla(0,0%,100%,.7) 0  2px 1px 7px, /* top HL */\n\n                        hsla(0,0%, 0%,.15) 0 -5px 6px 4px, /* outer SD */\n                        hsla(0,0%,100%,.5) 0  5px 6px 4px; /* outer HL */ \n\n                        transition: color .2s;\n                    }\n                    \n                    .${uniqClassName}-bgr-active {\n                        color: hsl(210, 100%, 40%);\n                        text-shadow: hsla(210,100%,20%,.3) 0 -1px 0, hsl(210,100%,85%) 0 2px 1px, hsla(200,100%,80%,1) 0 0 5px, hsla(210,100%,50%,.6) 0 0 20px;\n                        box-shadow: \n                            inset hsla(208, 79%, 28%,  1) 0  0px 0px 4px, /* border */\n                            inset hsla(208,100%,15%, .4) 0 -1px 5px 4px, /* soft SD */\n                            inset hsla(208,100%,20%,.25) 0 -1px 0px 7px, /* bottom SD */\n                            inset hsla(208,100%,100%,.7) 0  2px 1px 7px, /* top HL */\n\n                            hsla(208,100%,75%, .8) 0  0px 3px 2px, /* outer SD */\n                            hsla(208,50%,40%, .25) 0 -5px 6px 4px, /* outer SD */\n                            hsla(208,80%,95%,   1) 0  5px 6px 4px; /* outer HL */\n                    }\n\n                    .${uniqClassName}-rot {\n                        position: absolute;\n                        z-index: 2;\n                        top: 7px;\n                        left: 7px;\n                        background-image: -webkit-radial-gradient(  50%   0%,  8% 50%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\n                        -webkit-radial-gradient(  50% 100%, 12% 50%, hsla(0,0%,100%,.6) 0%, hsla(0,0%,100%,0) 100%),\n                        -webkit-radial-gradient(   0%  50%, 50%  7%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\n                        -webkit-radial-gradient( 100%  50%, 50%  5%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\n\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,  0%,0) 0%, hsla(0,0%,  0%,0)   3%, hsla(0,0%,  0%,.1) 3.5%),\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0)   6%, hsla(0,0%,100%,.1) 7.5%),\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0) 1.2%, hsla(0,0%,100%,.2) 2.2%),\n\n                        -webkit-radial-gradient( 50% 50%, 200% 50%, hsla(0,0%,90%,1) 5%, hsla(0,0%,85%,1) 30%, hsla(0,0%,60%,1) 100%);\n                    }\n\n\n                    .${uniqClassName}-rot:before, .${uniqClassName}-rot:after {\n                        content: \"\";\n                        top: 0;\n                        left: 0;\n                        position: absolute;\n                        width: inherit;\n                        height: inherit;\n                        border-radius: inherit;\n\n                        /* fake conical gradients */\n                        background-image: -webkit-radial-gradient(  50%   0%, 10% 50%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\n                        -webkit-radial-gradient(  50% 100%, 10% 50%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\n                        -webkit-radial-gradient(   0%  50%, 50% 10%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\n                        -webkit-radial-gradient( 100%  50%, 50% 06%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%);\n                    }\n                    .${uniqClassName}-rot:before { transform: rotate( 65deg); }\n                    .${uniqClassName}-rot:after { transform: rotate(-65deg); }\n                    \n                    .${uniqClassName}-notch {\n                        position: absolute;\n                        width: 10px;\n                        height: 10px;\n                        background: black;\n                        border-radius: 5px;\n                        top: 5px;\n                    }\n                    .${uniqClassName}-text {\n                        width: 100%;\n                        text-align: center;\n                        font-weight: bold;\n                        position: absolute;\n                        top: calc(50% - 0.6em);\n                        user-select: none;\n                        z-index: 3;\n                        color: #262626;\n                        text-shadow: -1px -1px 1px #111, 1px 1px 2px #fff;\n                    }`}\n                    </style>\n                    <div\n                        style={{\n                            position: 'relative',\n                            width: props.diameter,\n                            height: props.diameter,\n                            userSelect: 'none',\n                            margin: `${glowSpacing / 2}px 0 0 ${\n                                glowSpacing / 2\n                            }px`,\n                        }}\n                    >\n                        <div\n                            className={bgrClass}\n                            style={{\n                                width: `${props.diameter}px`,\n                                height: `${props.diameter}px`,\n                                borderRadius: `${props.diameter / 2}px`,\n                            }}\n                        ></div>\n                        <div\n                            className={`${uniqClassName}-rot`}\n                            style={{\n                                width: `${props.diameter - 14}px`,\n                                height: `${props.diameter - 14}px`,\n                                lineHeight: `${props.diameter - 14}px`,\n                                borderRadius: `${(props.diameter - 14) / 2}px`,\n                                transform: `rotate(${angle}deg)`,\n                            }}\n                        >\n                            <div\n                                className={`${uniqClassName}-notch`}\n                                style={{\n                                    left: `${(props.diameter - 24) / 2}px`,\n                                }}\n                            ></div>\n                        </div>\n                        <div\n                            className={`${uniqClassName}-text`}\n                            style={{\n                                fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            }}\n                        >\n                            {props.value}\n                        </div>\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinProps from './SkinProps'\nimport SkinWrap from './layout/SkinWrap'\nimport composeTwo from '../util/composeTwo'\nimport useAngleUpdater from '../util/useAngleUpdater'\n\nexport interface DonutTheme {\n    donutColor?: string\n    bgrColor?: string\n    maxedBgrColor?: string\n    centerColor?: string\n    centerFocusedColor?: string\n    donutThickness?: number\n}\n\n/*\n * CSS for this component is written by @Hyungsub\n * All credits goes to him\n * https://codepen.io/Hyungsub08/pen/yLBPJKW\n */\n\nconst uniqClassName = `donut-${new Date().getTime()}`\n\nexport default function Donut(props: SkinProps<DonutTheme>): JSX.Element {\n    const [angle, setAngle] = useAngleUpdater(props.value)\n    const [centerClass, setCenterClass] = useState(`${uniqClassName}-center`)\n\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>((isInteracting) => {\n        isInteracting\n            ? setCenterClass(`${uniqClassName}-center-active`)\n            : setCenterClass(`${uniqClassName}-center`)\n    }, props.onInteractionChange)\n\n    const theme = props.theme || {}\n\n    const donutColor = theme.donutColor || '#1BA098'\n    const defaultBgrColor = theme.bgrColor || '#e1e1e1'\n    const maxedBgrColor = theme.maxedBgrColor || '#051622'\n    const centerColor = theme.centerColor || '#fff'\n    const centerFocusedColor = theme.centerFocusedColor || '#F7F4E9'\n    const donutThickness = theme.donutThickness || 30\n\n    let bgrColor = defaultBgrColor\n    if (props.value === props.max) {\n        bgrColor = maxedBgrColor\n    }\n    let colorBgr = bgrColor\n    let colorOne = donutColor\n    let colorTwo = donutColor\n    let angleOne = 90\n    let angleTwo = angle\n\n    if (angle < 180) {\n        colorBgr = donutColor\n        colorOne = bgrColor\n        colorTwo = bgrColor\n        angleOne = angle + 90\n        angleTwo = 0\n    }\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                jumpLimit={props.jumpLimit}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <style type=\"text/css\">\n                        {`.${uniqClassName} {\n                      position: relative;\n                      border-radius: 50%;\n                      overflow: hidden;\n                    }\n                    .${uniqClassName}-slice-one, .${uniqClassName}-slice-two {\n                      position: absolute;\n                      top: 0;\n                      left: 0;\n                      width: 100%;\n                      height: 100%;\n                    }\n                    .${uniqClassName}-center, .${uniqClassName}-center-active {\n                      position: absolute;\n                      border-radius: 50%;\n                    }\n                    .${uniqClassName}-center {\n                      background: ${centerColor};\n                    }\n                    .${uniqClassName}-center-active {\n                      background: ${centerFocusedColor};\n                    }\n                    .${uniqClassName}-center span {\n                      display: block;\n                      text-align: center;\n                    }\n                    .${uniqClassName}-text {\n                        width: 100%;\n                        text-align: center;\n                        font-weight: bold;\n                        position: absolute;\n                        top: calc(50% - 0.6em);\n                        user-select: none;\n                        z-index: 3;\n                    }`}\n                    </style>\n                    <div\n                        style={{\n                            position: 'relative',\n                            width: props.diameter,\n                            height: props.diameter,\n                            userSelect: 'none',\n                        }}\n                    >\n                        <div\n                            className={uniqClassName}\n                            style={{\n                                width: `${props.diameter}px`,\n                                height: `${props.diameter}px`,\n                                background: colorBgr,\n                            }}\n                        >\n                            <div\n                                className={`${uniqClassName}-slice-one`}\n                                style={{\n                                    clip: `rect(0 ${props.diameter}px ${\n                                        props.diameter / 2\n                                    }px 0)`,\n                                    transform: `rotate(${angleOne}deg)`,\n                                    background: colorOne,\n                                }}\n                            ></div>\n                            <div\n                                className={`${uniqClassName}-slice-two`}\n                                style={{\n                                    clip: `rect(0 ${props.diameter / 2}px ${\n                                        props.diameter\n                                    }px 0)`,\n                                    transform: `rotate(${angleTwo}deg)`,\n                                    background: colorTwo,\n                                }}\n                            ></div>\n                            <div\n                                className={centerClass}\n                                style={{\n                                    top: `${donutThickness}px`,\n                                    left: `${donutThickness}px`,\n                                    width: `${\n                                        props.diameter - donutThickness * 2\n                                    }px`,\n                                    height: `${\n                                        props.diameter - donutThickness * 2\n                                    }px`,\n                                }}\n                            ></div>\n                        </div>\n                        <div\n                            className={`${uniqClassName}-text`}\n                            style={{\n                                color: donutColor,\n                                fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            }}\n                        >\n                            {props.value}\n                        </div>\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}