{"ast":null,"code":"var _jsxFileName = \"/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/RenderedScene.js\";\nimport React from \"react\"; // Component to spit out agent information\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RenderedScene extends React.Component {\n  // Construct so it takes properties and they are information\n  constructor(props) {\n    super(props);\n    this.state = {\n      src: \"http://localhost:5000/renderedScene\",\n      key: Date.now()\n    };\n    this.tick = this.tick.bind(this);\n  }\n\n  tick() {\n    this.setState({\n      src: \"http://localhost:5000/renderedScene\",\n      key: Date.now()\n    });\n    console.log(\"Updated Image\");\n    console.log(\"Key is\", this.state.key);\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  } // Render the information to screen\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.src,\n        alt: \"Scene is rendered\"\n      }, this.state.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RenderedScene;","map":{"version":3,"names":["React","RenderedScene","Component","constructor","props","state","src","key","Date","now","tick","bind","setState","console","log","componentDidMount","interval","setInterval","render"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/RenderedScene.js"],"sourcesContent":["import React from \"react\";\n\n\n// Component to spit out agent information\nclass RenderedScene extends React.Component {\n\n  // Construct so it takes properties and they are information\n  constructor(props) {\n    super(props);\n    this.state = {\n      src: \"http://localhost:5000/renderedScene\",\n      key: Date.now(),\n    };\n\n    this.tick = this.tick.bind(this);\n  }\n\n  tick() {\n    this.setState({\n      src: \"http://localhost:5000/renderedScene\",\n      key: Date.now(),\n    }) \n    console.log(\"Updated Image\");\n    console.log(\"Key is\", this.state.key);\n  }\n  \n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n  \n  // Render the information to screen\n  render() {\n    return (\n      <div>\n          {/* HTML FOR IMAGE */}\n          <img src={this.state.src} key={this.state.key} alt={\"Scene is rendered\"}/> \n      </div>\n      );\n    }\n}\n\n\nexport default RenderedScene;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;;;AACA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;EAE1C;EACAC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,GAAG,EAAE,qCADM;MAEXC,GAAG,EAAEC,IAAI,CAACC,GAAL;IAFM,CAAb;IAKA,KAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;EACD;;EAEDD,IAAI,GAAG;IACL,KAAKE,QAAL,CAAc;MACZN,GAAG,EAAE,qCADO;MAEZC,GAAG,EAAEC,IAAI,CAACC,GAAL;IAFO,CAAd;IAIAI,OAAO,CAACC,GAAR,CAAY,eAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKT,KAAL,CAAWE,GAAjC;EACD;;EAEDQ,iBAAiB,GAAG;IAClB,KAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKP,IAAL,EAAP,EAAoB,IAApB,CAA3B;EACD,CAxByC,CA0B1C;;;EACAQ,MAAM,GAAG;IACP,oBACE;MAAA,uBAEI;QAAK,GAAG,EAAE,KAAKb,KAAL,CAAWC,GAArB;QAA+C,GAAG,EAAE;MAApD,GAA+B,KAAKD,KAAL,CAAWE,GAA1C;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,QADF;EAMC;;AAlCuC;;AAsC5C,eAAeN,aAAf"},"metadata":{},"sourceType":"module"}