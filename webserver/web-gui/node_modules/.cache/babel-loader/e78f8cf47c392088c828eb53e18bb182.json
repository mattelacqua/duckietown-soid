{"ast":null,"code":"/**\n *\n * @namespace faker.date\n */\nvar _Date = function (faker) {\n  var self = this;\n  /**\n   * past\n   *\n   * @method faker.date.past\n   * @param {number} years\n   * @param {date} refDate\n   */\n\n  self.past = function (years, refDate) {\n    var date = new Date();\n\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (years || 1) * 365 * 24 * 3600 * 1000\n    };\n    var past = date.getTime();\n    past -= faker.datatype.number(range); // some time from now to N years ago, in milliseconds\n\n    date.setTime(past);\n    return date;\n  };\n  /**\n   * future\n   *\n   * @method faker.date.future\n   * @param {number} years\n   * @param {date} refDate\n   */\n\n\n  self.future = function (years, refDate) {\n    var date = new Date();\n\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (years || 1) * 365 * 24 * 3600 * 1000\n    };\n    var future = date.getTime();\n    future += faker.datatype.number(range); // some time from now to N years later, in milliseconds\n\n    date.setTime(future);\n    return date;\n  };\n  /**\n   * between\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n\n\n  self.between = function (from, to) {\n    var fromMilli = Date.parse(from);\n    var dateOffset = faker.datatype.number(Date.parse(to) - fromMilli);\n    var newDate = new Date(fromMilli + dateOffset);\n    return newDate;\n  };\n  /**\n   * betweens\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n\n\n  self.betweens = function (from, to, num) {\n    if (typeof num == 'undefined') {\n      num = 3;\n    }\n\n    var newDates = [];\n    var fromMilli = Date.parse(from);\n    var dateOffset = (Date.parse(to) - fromMilli) / (num + 1);\n    var lastDate = from;\n\n    for (var i = 0; i < num; i++) {\n      fromMilli = Date.parse(lastDate);\n      lastDate = new Date(fromMilli + dateOffset);\n      newDates.push(lastDate);\n    }\n\n    return newDates;\n  };\n  /**\n   * recent\n   *\n   * @method faker.date.recent\n   * @param {number} days\n   * @param {date} refDate\n   */\n\n\n  self.recent = function (days, refDate) {\n    var date = new Date();\n\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (days || 1) * 24 * 3600 * 1000\n    };\n    var future = date.getTime();\n    future -= faker.datatype.number(range); // some time from now to N days ago, in milliseconds\n\n    date.setTime(future);\n    return date;\n  };\n  /**\n   * soon\n   *\n   * @method faker.date.soon\n   * @param {number} days\n   * @param {date} refDate\n   */\n\n\n  self.soon = function (days, refDate) {\n    var date = new Date();\n\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (days || 1) * 24 * 3600 * 1000\n    };\n    var future = date.getTime();\n    future += faker.datatype.number(range); // some time from now to N days later, in milliseconds\n\n    date.setTime(future);\n    return date;\n  };\n  /**\n   * month\n   *\n   * @method faker.date.month\n   * @param {object} options\n   */\n\n\n  self.month = function (options) {\n    options = options || {};\n    var type = 'wide';\n\n    if (options.abbr) {\n      type = 'abbr';\n    }\n\n    if (options.context && typeof faker.definitions.date.month[type + '_context'] !== 'undefined') {\n      type += '_context';\n    }\n\n    var source = faker.definitions.date.month[type];\n    return faker.random.arrayElement(source);\n  };\n  /**\n   * weekday\n   *\n   * @param {object} options\n   * @method faker.date.weekday\n   */\n\n\n  self.weekday = function (options) {\n    options = options || {};\n    var type = 'wide';\n\n    if (options.abbr) {\n      type = 'abbr';\n    }\n\n    if (options.context && typeof faker.definitions.date.weekday[type + '_context'] !== 'undefined') {\n      type += '_context';\n    }\n\n    var source = faker.definitions.date.weekday[type];\n    return faker.random.arrayElement(source);\n  };\n\n  return self;\n};\n\nmodule['exports'] = _Date;","map":{"version":3,"names":["_Date","faker","self","past","years","refDate","date","Date","parse","range","min","max","getTime","datatype","number","setTime","future","between","from","to","fromMilli","dateOffset","newDate","betweens","num","newDates","lastDate","i","push","recent","days","soon","month","options","type","abbr","context","definitions","source","random","arrayElement","weekday","module"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/faker/lib/date.js"],"sourcesContent":["/**\n *\n * @namespace faker.date\n */\nvar _Date = function (faker) {\n  var self = this;\n  /**\n   * past\n   *\n   * @method faker.date.past\n   * @param {number} years\n   * @param {date} refDate\n   */\n  self.past = function (years, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (years || 1) * 365 * 24 * 3600 * 1000\n    };\n\n    var past = date.getTime();\n    past -= faker.datatype.number(range); // some time from now to N years ago, in milliseconds\n    date.setTime(past);\n\n    return date;\n  };\n\n  /**\n   * future\n   *\n   * @method faker.date.future\n   * @param {number} years\n   * @param {date} refDate\n   */\n  self.future = function (years, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (years || 1) * 365 * 24 * 3600 * 1000\n    };\n\n    var future = date.getTime();\n    future += faker.datatype.number(range); // some time from now to N years later, in milliseconds\n    date.setTime(future);\n\n    return date;\n  };\n\n  /**\n   * between\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n  self.between = function (from, to) {\n    var fromMilli = Date.parse(from);\n    var dateOffset = faker.datatype.number(Date.parse(to) - fromMilli);\n\n    var newDate = new Date(fromMilli + dateOffset);\n\n    return newDate;\n  };\n\n  /**\n   * betweens\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n  self.betweens = function (from, to, num) {\n    if (typeof num == 'undefined') { num = 3; }\n    var newDates = [];\n    var fromMilli = Date.parse(from);\n    var dateOffset = (Date.parse(to) - fromMilli) / ( num + 1 );\n    var lastDate = from\n    for (var i = 0; i < num; i++) {\n      fromMilli = Date.parse(lastDate);\n      lastDate = new Date(fromMilli + dateOffset)\n      newDates.push(lastDate)\n    }\n    return newDates;\n  };\n\n\n  /**\n   * recent\n   *\n   * @method faker.date.recent\n   * @param {number} days\n   * @param {date} refDate\n   */\n  self.recent = function (days, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (days || 1) * 24 * 3600 * 1000\n    };\n\n    var future = date.getTime();\n    future -= faker.datatype.number(range); // some time from now to N days ago, in milliseconds\n    date.setTime(future);\n\n    return date;\n  };\n\n  /**\n   * soon\n   *\n   * @method faker.date.soon\n   * @param {number} days\n   * @param {date} refDate\n   */\n  self.soon = function (days, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (days || 1) * 24 * 3600 * 1000\n    };\n\n    var future = date.getTime();\n    future += faker.datatype.number(range); // some time from now to N days later, in milliseconds\n    date.setTime(future);\n\n    return date;\n  };\n\n  /**\n   * month\n   *\n   * @method faker.date.month\n   * @param {object} options\n   */\n  self.month = function (options) {\n    options = options || {};\n\n    var type = 'wide';\n    if (options.abbr) {\n      type = 'abbr';\n    }\n    if (options.context && typeof faker.definitions.date.month[type + '_context'] !== 'undefined') {\n      type += '_context';\n    }\n\n    var source = faker.definitions.date.month[type];\n\n    return faker.random.arrayElement(source);\n  };\n\n  /**\n   * weekday\n   *\n   * @param {object} options\n   * @method faker.date.weekday\n   */\n  self.weekday = function (options) {\n    options = options || {};\n\n    var type = 'wide';\n    if (options.abbr) {\n      type = 'abbr';\n    }\n    if (options.context && typeof faker.definitions.date.weekday[type + '_context'] !== 'undefined') {\n      type += '_context';\n    }\n\n    var source = faker.definitions.date.weekday[type];\n\n    return faker.random.arrayElement(source);\n  };\n\n  return self;\n\n};\n\nmodule['exports'] = _Date;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}