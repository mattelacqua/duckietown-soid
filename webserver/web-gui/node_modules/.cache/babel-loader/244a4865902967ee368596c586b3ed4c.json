{"ast":null,"code":"var _jsxFileName = \"/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/AgentMap.js\";\nimport React from 'react';\nimport { Chart as ChartJS, LinearScale, PointElement, LineElement, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-plugin-dragdata';\nimport io from 'socket.io-client';\nimport './AgentMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LinearScale, PointElement, LineElement, Tooltip, Legend);\nconst socket = io();\n\nclass AgentMap extends React.Component {\n  // Constructor\n  constructor(props) {\n    super(props); // Init Datasets\n\n    const datasets = [];\n    this.props.agents.forEach(function (agent) {\n      datasets.push({\n        label: agent.agent_id,\n        data: [agent.cur_pos],\n        backgroundColor: agent.color\n      });\n    });\n    this.update_agent_pos = this.update_agent_pos.bind(this);\n    this.update_point_size = this.update_point_size.bind(this); //\n    // Init State\n\n    this.state = {\n      agents: this.props.agents,\n      data: {\n        datasets\n      },\n      car_radius: 0\n    }; // End state\n  }\n\n  update_agent_pos(e, datasetIndex, index, value) {\n    e.target.style.cursor = 'default';\n    socket.emit('agent_pos', {\n      'id': \"agent\" + datasetIndex,\n      'x': value.x,\n      'z': value.y\n    });\n    this.props.pos_pass(\"agent\" + datasetIndex, value.x, value.y);\n  }\n\n  update_point_size(chart, size) {\n    const area = size.width * size.height;\n    const tile_area = this.props.tile_size * this.props.tile_size * 100;\n    const tile_scale = tile_area / area;\n    const car_radius = tile_scale / (2 * tile_scale);\n    console.log(\"TileArea\", tile_area);\n    console.log(\"TileScale\", tile_scale);\n    console.log(\"Car Radius\", car_radius);\n    this.setState({\n      car_radius: car_radius\n    });\n  }\n\n  render() {\n    // Load background image\n    const image = new Image();\n    image.src = 'http://localhost:5000/mapImage';\n    const map_background = {\n      beforeDraw: chart => {\n        if (image.complete) {\n          const ctx = chart.ctx;\n          const {\n            top,\n            left,\n            width,\n            height\n          } = chart.chartArea;\n          const x = left;\n          const y = top;\n          ctx.drawImage(image, x, y, width, height);\n        } else {\n          image.onload = () => chart.draw();\n        }\n      }\n    };\n    const options = {\n      aspectRatio: 1,\n      onResize: this.update_point_size,\n      // Elements\n      elements: {\n        point: {\n          radius: this.state.car_radius\n        }\n      },\n      // Plugins\n      responsive: true,\n      plugins: {\n        dragData: {\n          dragX: true,\n          round: 3,\n          showTooltip: true,\n          onDragStart: function (e, datasetIndex, index, value) {},\n          onDrag: function (e, datasetIndex, index, value) {\n            e.target.style.cursor = 'grabbing';\n          },\n          onDragEnd: this.update_agent_pos\n        } // End drag Data\n\n      },\n      // End plugin\n      // Parsing\n      parsing: {\n        xAxisKey: 'x',\n        yAxisKey: 'y'\n      },\n      // Scales x and y\n      scales: {\n        y: {\n          dragData: true,\n          beginAtZero: true,\n          min: 0,\n          max: this.props.max_NS,\n          reverse: true,\n          grid: {\n            color: 'LightGray'\n          },\n          ticks: {\n            stepSize: this.props.tile_size\n          }\n        },\n        // End y\n        x: {\n          dragData: true,\n          beginAtZero: true,\n          min: 0,\n          max: this.props.max_EW,\n          grid: {\n            color: 'LightGray'\n          },\n          ticks: {\n            stepSize: this.props.tile_size\n          },\n          type: \"linear\"\n        } // End x\n\n      } // End Scales\n\n    }; // End options  \n\n    const style = {\n      float: 'left',\n      width: '50%'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"AgentMap\",\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        classname: \"agentMap\",\n        options: options,\n        data: this.state.data,\n        plugins: [map_background]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default AgentMap;","map":{"version":3,"names":["React","Chart","ChartJS","LinearScale","PointElement","LineElement","Tooltip","Legend","Line","io","register","socket","AgentMap","Component","constructor","props","datasets","agents","forEach","agent","push","label","agent_id","data","cur_pos","backgroundColor","color","update_agent_pos","bind","update_point_size","state","car_radius","e","datasetIndex","index","value","target","style","cursor","emit","x","y","pos_pass","chart","size","area","width","height","tile_area","tile_size","tile_scale","console","log","setState","render","image","Image","src","map_background","beforeDraw","complete","ctx","top","left","chartArea","drawImage","onload","draw","options","aspectRatio","onResize","elements","point","radius","responsive","plugins","dragData","dragX","round","showTooltip","onDragStart","onDrag","onDragEnd","parsing","xAxisKey","yAxisKey","scales","beginAtZero","min","max","max_NS","reverse","grid","ticks","stepSize","max_EW","type","float"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/AgentMap.js"],"sourcesContent":["import React from 'react';\nimport {\n  Chart as ChartJS,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-plugin-dragdata';\n\nimport io from 'socket.io-client';\n\nimport './AgentMap.css'\n\nChartJS.register(LinearScale, PointElement, LineElement, Tooltip, Legend);\n\nconst socket = io();\n\nclass AgentMap extends React.Component {\n\n  // Constructor\n  constructor(props) {\n    super(props);\n\n    // Init Datasets\n    const datasets = [];\n    this.props.agents.forEach(function (agent) {\n      datasets.push({\n        label: agent.agent_id,\n        data: [agent.cur_pos],\n        backgroundColor: agent.color,\n      });\n    });\n\n    this.update_agent_pos = this.update_agent_pos.bind(this);\n    this.update_point_size = this.update_point_size.bind(this);\n    //\n    // Init State\n    this.state = {\n      agents: this.props.agents,\n\n      data:{datasets},\n      car_radius:0,\n    }; // End state\n  }\n\n  update_agent_pos(e, datasetIndex, index, value) {\n      e.target.style.cursor = 'default';\n      socket.emit('agent_pos',\n        {\n          'id': \"agent\" + datasetIndex,\n          'x': value.x,\n          'z': value.y,\n      });\n      this.props.pos_pass(\"agent\" + datasetIndex, value.x, value.y);\n    }\n\n  update_point_size(chart, size){\n    const area = size.width*size.height;\n    const tile_area = this.props.tile_size * this.props.tile_size * 100;\n    const tile_scale = tile_area / area;\n    const car_radius = tile_scale / (2*tile_scale);\n    console.log(\"TileArea\", tile_area)\n    console.log(\"TileScale\", tile_scale)\n    console.log(\"Car Radius\", car_radius)\n    this.setState({car_radius: car_radius});\n  }\n\n\n  render() {\n    // Load background image\n    const image = new Image();\n    image.src = 'http://localhost:5000/mapImage';\n\n    const map_background = {\n      beforeDraw: (chart) => {\n      if (image.complete) {\n          const ctx = chart.ctx;\n          const {top, left, width, height} = chart.chartArea;\n          const x = left;\n          const y = top;\n          ctx.drawImage(image, x, y, width, height);\n        } else {\n          image.onload = () => chart.draw();\n        }\n      }\n    };\n\n\n\n\n    \n    const options = {\n          aspectRatio: 1,\n          onResize: this.update_point_size,\n          // Elements\n          elements : {\n            point : {\n                radius : this.state.car_radius, \n            },\n          },\n          // Plugins\n          responsive: true,\n          plugins: {\n              dragData: {\n                dragX: true,\n                round: 3,\n                showTooltip: true,\n                onDragStart:function (e, datasetIndex, index, value) {},\n                onDrag: function (e, datasetIndex, index, value) {\n                    e.target.style.cursor = 'grabbing';\n                },\n                onDragEnd: this.update_agent_pos,\n              }, // End drag Data\n          }, // End plugin\n          \n          // Parsing\n          parsing: {\n              xAxisKey: 'x',\n              yAxisKey: 'y',\n          },\n\n          // Scales x and y\n          scales: {\n            y: {\n              dragData: true,\n              beginAtZero: true,\n              min : 0,\n              max : this.props.max_NS,\n              reverse : true,\n              grid : {\n                  color: 'LightGray',\n              },\n              ticks: {\n                stepSize: this.props.tile_size,\n              }\n\n            }, // End y\n            x: {\n              dragData: true,\n              beginAtZero: true,\n              min : 0,\n              max : this.props.max_EW,\n              grid : {\n                  color: 'LightGray',\n              },\n              ticks: {\n                stepSize: this.props.tile_size,\n              },\n              type: \"linear\",\n            }, // End x\n          }, // End Scales\n          \n        }; // End options  \n\n     const style = {\n       float: 'left',\n       width: '50%'\n     }\n     return (\n        <div classname = \"AgentMap\" style={style}>\n            <Line classname=\"agentMap\" options={options} data={this.state.data} plugins={[map_background]} />;\n        </div>\n     )\n\n  }\n}\n\nexport default AgentMap;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}