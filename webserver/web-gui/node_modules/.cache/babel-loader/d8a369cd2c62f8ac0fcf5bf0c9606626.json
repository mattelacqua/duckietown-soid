{"ast":null,"code":"var _jsxFileName = \"/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/Agent.js\";\n// Import React\nimport React from \"react\"; // Import Angle Dial \n\nimport AngleDial from './AngleDial.js'; // Import Agent Info Screen\n\nimport AgentInfo from './AgentInfo.js'; // Import Agent Info Screen\n\nimport LightDrop from './LightDrop.js'; // Agent Component (gets rendered in app)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Agent extends React.Component {\n  // Construct it with state so we can keep track of relevant information\n  constructor(props) {\n    super(props);\n    this.state = {\n      agent_id: props.agent_id,\n      cur_pos: props.cur_pos,\n      cur_angle: props.cur_angle,\n      color: props.color,\n      lights: props.lights\n    };\n    this.angle_pass = this.angle_pass.bind(this); // Bind angle pass to this component\n\n    this.lights_pass = this.lights_pass.bind(this); // Bind angle pass to this component\n  } // Handler to pass to child to update the state of the agent, which forces a\n  // re-render. We call this in AgentDial when we update the dial so the text updates as well.\n\n\n  angle_pass(angle) {\n    this.setState({\n      cur_angle: angle\n    });\n  }\n\n  lights_pass(newLights) {\n    this.setState({\n      lights: newLights\n    });\n  } // Render the agent component ( Consists currently of a dial (AgentDial.js and agent information AgentInfo.js)\n\n\n  render() {\n    const lights = this.state.lights;\n    console.log(\"HERE\");\n    console.log(lights);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AngleDial, {\n        cur_angle: this.state.cur_angle,\n        agent_id: this.state.agent_id,\n        agent_color: this.state.color,\n        angle_pass: this.angle_pass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AgentInfo, {\n        agent_id: this.state.agent_id,\n        cur_angle: this.state.cur_angle,\n        cur_pos: this.state.cur_pos,\n        color: this.state.color,\n        lights: lights\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), \"/*\", /*#__PURE__*/_jsxDEV(LightDrop, {\n        agent_id: this.state.agent_id,\n        lights: lights,\n        lights_pass: this.lights_pass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this), \"*/\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this);\n  }\n\n} // Allow it to be called in other functions\n\n\nexport default Agent;","map":{"version":3,"names":["React","AngleDial","AgentInfo","LightDrop","Agent","Component","constructor","props","state","agent_id","cur_pos","cur_angle","color","lights","angle_pass","bind","lights_pass","angle","setState","newLights","render","console","log"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/Agent.js"],"sourcesContent":["// Import React\nimport React from \"react\";\n\n// Import Angle Dial \nimport AngleDial from './AngleDial.js'\n\n// Import Agent Info Screen\nimport AgentInfo from './AgentInfo.js'\n\n// Import Agent Info Screen\nimport LightDrop from './LightDrop.js'\n\n// Agent Component (gets rendered in app)\nclass Agent extends React.Component {\n\n  // Construct it with state so we can keep track of relevant information\n  constructor(props) {\n    super(props);\n    this.state = {\n      agent_id: props.agent_id,\n      cur_pos: props.cur_pos,\n      cur_angle: props.cur_angle,\n      color: props.color,\n      lights: props.lights\n    };\n    this.angle_pass = this.angle_pass.bind(this); // Bind angle pass to this component\n    this.lights_pass = this.lights_pass.bind(this); // Bind angle pass to this component\n  }\n\n  // Handler to pass to child to update the state of the agent, which forces a\n  // re-render. We call this in AgentDial when we update the dial so the text updates as well.\n  angle_pass(angle) {\n    this.setState({\n        cur_angle: angle\n    });\n  }\n\n  lights_pass(newLights) {\n    this.setState({\n        lights: newLights\n    });\n  }\n  // Render the agent component ( Consists currently of a dial (AgentDial.js and agent information AgentInfo.js)\n  render() {\n    const lights = this.state.lights;\n    console.log(\"HERE\")\n    console.log(lights)\n    return (\n              <div>\n                  {/* Render a Dial */}\n                <AngleDial  cur_angle={this.state.cur_angle} \n                            agent_id={this.state.agent_id} \n                            agent_color={this.state.color} \n                            angle_pass={this.angle_pass} />\n\n                  {/* Render Agent Information */}\n                <AgentInfo    agent_id={this.state.agent_id}\n                              cur_angle={this.state.cur_angle}\n                              cur_pos= {this.state.cur_pos}\n                              color={this.state.color} \n                              lights={lights}/>\n      \n                /*<LightDrop  agent_id={this.state.agent_id} \n                            lights={lights}\n                            lights_pass={this.lights_pass}/>*/\n              </div>\n          );\n    }\n}\n\n// Allow it to be called in other functions\nexport default Agent;\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,gBAAtB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,gBAAtB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,gBAAtB,C,CAEA;;;;AACA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;EAElC;EACAC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,QAAQ,EAAEF,KAAK,CAACE,QADL;MAEXC,OAAO,EAAEH,KAAK,CAACG,OAFJ;MAGXC,SAAS,EAAEJ,KAAK,CAACI,SAHN;MAIXC,KAAK,EAAEL,KAAK,CAACK,KAJF;MAKXC,MAAM,EAAEN,KAAK,CAACM;IALH,CAAb;IAOA,KAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB,CATiB,CAS6B;;IAC9C,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB,CAViB,CAU+B;EACjD,CAdiC,CAgBlC;EACA;;;EACAD,UAAU,CAACG,KAAD,EAAQ;IAChB,KAAKC,QAAL,CAAc;MACVP,SAAS,EAAEM;IADD,CAAd;EAGD;;EAEDD,WAAW,CAACG,SAAD,EAAY;IACrB,KAAKD,QAAL,CAAc;MACVL,MAAM,EAAEM;IADE,CAAd;EAGD,CA5BiC,CA6BlC;;;EACAC,MAAM,GAAG;IACP,MAAMP,MAAM,GAAG,KAAKL,KAAL,CAAWK,MAA1B;IACAQ,OAAO,CAACC,GAAR,CAAY,MAAZ;IACAD,OAAO,CAACC,GAAR,CAAYT,MAAZ;IACA,oBACU;MAAA,wBAEE,QAAC,SAAD;QAAY,SAAS,EAAE,KAAKL,KAAL,CAAWG,SAAlC;QACY,QAAQ,EAAE,KAAKH,KAAL,CAAWC,QADjC;QAEY,WAAW,EAAE,KAAKD,KAAL,CAAWI,KAFpC;QAGY,UAAU,EAAE,KAAKE;MAH7B;QAAA;QAAA;QAAA;MAAA,QAFF,eAQE,QAAC,SAAD;QAAc,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAAnC;QACc,SAAS,EAAE,KAAKD,KAAL,CAAWG,SADpC;QAEc,OAAO,EAAG,KAAKH,KAAL,CAAWE,OAFnC;QAGc,KAAK,EAAE,KAAKF,KAAL,CAAWI,KAHhC;QAIc,MAAM,EAAEC;MAJtB;QAAA;QAAA;QAAA;MAAA,QARF,qBAcI,QAAC,SAAD;QAAY,QAAQ,EAAE,KAAKL,KAAL,CAAWC,QAAjC;QACU,MAAM,EAAEI,MADlB;QAEU,WAAW,EAAE,KAAKG;MAF5B;QAAA;QAAA;QAAA;MAAA,QAdJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADV;EAoBC;;AAtD+B,C,CAyDpC;;;AACA,eAAeZ,KAAf"},"metadata":{},"sourceType":"module"}