{"ast":null,"code":"var _jsxFileName = \"/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/AngleDial.js\";\n// Import React\nimport React from \"react\"; // Import Basic Knob from react-dial-kknob\n\nimport { Basic } from \"react-dial-knob\"; // Import io from socket to send to backend flask\n\nimport io from 'socket.io-client'; // Create the socket\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(); // Component for AngleDial (rendered from Agent)\n\nclass AngleDial extends React.Component {\n  // Dial has a cur_angle and an id\n  constructor(props) {\n    super(props);\n\n    this.handleChange = newValue => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.state = {\n      value: props.cur_angle,\n      // Value of the the angle is\n      id: props.agent_id // Which agent\n\n    };\n  } // Once the dial gets mounted\n\n\n  componentDidMount() {\n    // Emit to the socket the angle every 2 seconds\n    setInterval(() => {\n      // This goes to webserver.py (@socketio.on(\"agent_angle\")\n      socket.emit('agent_angle', {\n        'id': this.state.id,\n        // Pass the agent_id stored in state\n        'value': this.state.value // Pass the cur_angle stored in state\n\n      }); // End emit\n    }, 2000); // End Interval\n  } // End did mount\n  // Update the dial state on new changes\n\n\n  // Render the Dial component from the react-dial-knob package\n  render() {\n    return /*#__PURE__*/_jsxDEV(Basic, {\n      diameter: 200,\n      min: 0,\n      max: 360,\n      step: 1,\n      value: this.state.value // Set its value to the state value\n      ,\n      theme: {\n        defaultColor: '#333',\n        activeColor: '#3f3'\n      },\n      style: {\n        position: 'relative',\n        margin: '100px auto',\n        width: '200px'\n      },\n      onValueChange: this.handleChange // When the value gets changed, call our handleChange method\n      ,\n      ariaLabelledBy: 'my-label' // Label beneath it\n      ,\n      spaceMaxFromZero: false,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        id: 'my-label',\n        style: {\n          textAlign: 'center',\n          width: '200px',\n          display: 'block',\n          padding: '10px 0'\n        },\n        children: [\"Agent: \", this.state.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } // End Render\n\n\n} // End Class\n// Let us use in other componenets\n\n\nexport default AngleDial;","map":{"version":3,"names":["React","Basic","io","socket","AngleDial","Component","constructor","props","handleChange","newValue","setState","value","state","cur_angle","id","agent_id","componentDidMount","setInterval","emit","render","defaultColor","activeColor","position","margin","width","textAlign","display","padding"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/AngleDial.js"],"sourcesContent":["// Import React\nimport React from \"react\";\n\n// Import Basic Knob from react-dial-kknob\nimport { Basic } from \"react-dial-knob\";\n\n// Import io from socket to send to backend flask\nimport io from 'socket.io-client';\n\n// Create the socket\nconst socket = io();\n\n// Component for AngleDial (rendered from Agent)\nclass AngleDial extends React.Component {\n\n  // Dial has a cur_angle and an id\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.cur_angle, // Value of the the angle is\n      id: props.agent_id,     // Which agent\n    };\n  }\n\n  // Once the dial gets mounted\n  componentDidMount() {\n    // Emit to the socket the angle every 2 seconds\n    setInterval(() => {\n      // This goes to webserver.py (@socketio.on(\"agent_angle\")\n      socket.emit('agent_angle',\n                    {\n                        'id':this.state.id,         // Pass the agent_id stored in state\n                        'value':this.state.value    // Pass the cur_angle stored in state\n                    }); // End emit\n        }, 2000); // End Interval\n  } // End did mount\n\n  // Update the dial state on new changes\n  handleChange = (newValue) => {\n    this.setState({value: newValue});\n  };\n  \n\n  // Render the Dial component from the react-dial-knob package\n  render() {\n    return (<Basic\n          diameter={200}\n          min={0}\n          max={360}\n          step={1}\n          value={this.state.value} // Set its value to the state value\n          theme={{\n              defaultColor: '#333',\n              activeColor: '#3f3'\n          }}\n          style={{\n            position: 'relative',\n            margin: '100px auto',\n            width: '200px',\n          }}\n          onValueChange={this.handleChange} // When the value gets changed, call our handleChange method\n          ariaLabelledBy={'my-label'} // Label beneath it\n          spaceMaxFromZero={false}\n        > \n          <label id={'my-label'} style={{\n            textAlign: 'center',\n            width: '200px',\n            display: 'block',\n            padding: '10px 0'\n          }}>Agent: {this.state.id}</label>\n      </Basic> );\n    } // End Render\n} // End Class\n\n// Let us use in other componenets\nexport default AngleDial;\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,KAAT,QAAsB,iBAAtB,C,CAEA;;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CAEA;;;AACA,MAAMC,MAAM,GAAGD,EAAE,EAAjB,C,CAEA;;AACA,MAAME,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;EAEtC;EACAC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAsBnBC,YAtBmB,GAsBHC,QAAD,IAAc;MAC3B,KAAKC,QAAL,CAAc;QAACC,KAAK,EAAEF;MAAR,CAAd;IACD,CAxBkB;;IAEjB,KAAKG,KAAL,GAAa;MACXD,KAAK,EAAEJ,KAAK,CAACM,SADF;MACa;MACxBC,EAAE,EAAEP,KAAK,CAACQ,QAFC,CAEa;;IAFb,CAAb;EAID,CATqC,CAWtC;;;EACAC,iBAAiB,GAAG;IAClB;IACAC,WAAW,CAAC,MAAM;MAChB;MACAd,MAAM,CAACe,IAAP,CAAY,aAAZ,EACc;QACI,MAAK,KAAKN,KAAL,CAAWE,EADpB;QACgC;QAC5B,SAAQ,KAAKF,KAAL,CAAWD,KAFvB,CAEgC;;MAFhC,CADd,EAFgB,CAME;IACf,CAPM,EAOJ,IAPI,CAAX,CAFkB,CASJ;EACf,CAtBqC,CAsBpC;EAEF;;;EAMA;EACAQ,MAAM,GAAG;IACP,oBAAQ,QAAC,KAAD;MACF,QAAQ,EAAE,GADR;MAEF,GAAG,EAAE,CAFH;MAGF,GAAG,EAAE,GAHH;MAIF,IAAI,EAAE,CAJJ;MAKF,KAAK,EAAE,KAAKP,KAAL,CAAWD,KALhB,CAKuB;MALvB;MAMF,KAAK,EAAE;QACHS,YAAY,EAAE,MADX;QAEHC,WAAW,EAAE;MAFV,CANL;MAUF,KAAK,EAAE;QACLC,QAAQ,EAAE,UADL;QAELC,MAAM,EAAE,YAFH;QAGLC,KAAK,EAAE;MAHF,CAVL;MAeF,aAAa,EAAE,KAAKhB,YAflB,CAegC;MAfhC;MAgBF,cAAc,EAAE,UAhBd,CAgB0B;MAhB1B;MAiBF,gBAAgB,EAAE,KAjBhB;MAAA,uBAmBF;QAAO,EAAE,EAAE,UAAX;QAAuB,KAAK,EAAE;UAC5BiB,SAAS,EAAE,QADiB;UAE5BD,KAAK,EAAE,OAFqB;UAG5BE,OAAO,EAAE,OAHmB;UAI5BC,OAAO,EAAE;QAJmB,CAA9B;QAAA,sBAKW,KAAKf,KAAL,CAAWE,EALtB;MAAA;QAAA;QAAA;QAAA;MAAA;IAnBE;MAAA;MAAA;MAAA;IAAA,QAAR;EA0BC,CA1DmC,CA0DlC;;;AA1DkC,C,CA2DtC;AAEF;;;AACA,eAAeV,SAAf"},"metadata":{},"sourceType":"module"}