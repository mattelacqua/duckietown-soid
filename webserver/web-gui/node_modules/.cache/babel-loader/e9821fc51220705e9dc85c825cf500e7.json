{"ast":null,"code":"// the `unique` module\nvar unique = {}; // global results store\n// currently uniqueness is global to entire faker instance\n// this means that faker should currently *never* return duplicate values across all API methods when using `Faker.unique`\n// it's possible in the future that some users may want to scope found per function call instead of faker instance\n\nvar found = {}; // global exclude list of results\n// defaults to nothing excluded\n\nvar exclude = []; // current iteration or retries of unique.exec ( current loop depth )\n\nvar currentIterations = 0; // uniqueness compare function\n// default behavior is to check value as key against object hash\n\nvar defaultCompare = function (obj, key) {\n  if (typeof obj[key] === 'undefined') {\n    return -1;\n  }\n\n  return 0;\n}; // common error handler for messages\n\n\nunique.errorMessage = function (now, code, opts) {\n  console.error('error', code);\n  console.log('found', Object.keys(found).length, 'unique entries before throwing error. \\nretried:', currentIterations, '\\ntotal time:', now - opts.startTime, 'ms');\n  throw new Error(code + ' for uniqueness check \\n\\nMay not be able to generate any more unique values with current settings. \\nTry adjusting maxTime or maxRetries parameters for faker.unique()');\n};\n\nunique.exec = function (method, args, opts) {\n  //console.log(currentIterations)\n  var now = new Date().getTime();\n  opts = opts || {};\n  opts.maxTime = opts.maxTime || 3;\n  opts.maxRetries = opts.maxRetries || 50;\n  opts.exclude = opts.exclude || exclude;\n  opts.compare = opts.compare || defaultCompare;\n\n  if (typeof opts.currentIterations !== 'number') {\n    opts.currentIterations = 0;\n  }\n\n  if (typeof opts.startTime === 'undefined') {\n    opts.startTime = new Date().getTime();\n  }\n\n  var startTime = opts.startTime; // support single exclude argument as string\n\n  if (typeof opts.exclude === 'string') {\n    opts.exclude = [opts.exclude];\n  }\n\n  if (opts.currentIterations > 0) {// console.log('iterating', currentIterations)\n  } // console.log(now - startTime)\n\n\n  if (now - startTime >= opts.maxTime) {\n    return unique.errorMessage(now, 'Exceeded maxTime:' + opts.maxTime, opts);\n  }\n\n  if (opts.currentIterations >= opts.maxRetries) {\n    return unique.errorMessage(now, 'Exceeded maxRetries:' + opts.maxRetries, opts);\n  } // execute the provided method to find a potential satifised value\n\n\n  var result = method.apply(this, args); // if the result has not been previously found, add it to the found array and return the value as it's unique\n\n  if (opts.compare(found, result) === -1 && opts.exclude.indexOf(result) === -1) {\n    found[result] = result;\n    opts.currentIterations = 0;\n    return result;\n  } else {\n    // console.log('conflict', result);\n    opts.currentIterations++;\n    return unique.exec(method, args, opts);\n  }\n};\n\nmodule.exports = unique;","map":{"version":3,"names":["unique","found","exclude","currentIterations","defaultCompare","obj","key","errorMessage","now","code","opts","console","error","log","Object","keys","length","startTime","Error","exec","method","args","Date","getTime","maxTime","maxRetries","compare","result","apply","indexOf","module","exports"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/node_modules/faker/vendor/unique.js"],"sourcesContent":["// the `unique` module\nvar unique = {};\n\n// global results store\n// currently uniqueness is global to entire faker instance\n// this means that faker should currently *never* return duplicate values across all API methods when using `Faker.unique`\n// it's possible in the future that some users may want to scope found per function call instead of faker instance\nvar found = {};\n\n// global exclude list of results\n// defaults to nothing excluded\nvar exclude = [];\n\n// current iteration or retries of unique.exec ( current loop depth )\nvar currentIterations = 0;\n\n// uniqueness compare function\n// default behavior is to check value as key against object hash\nvar defaultCompare = function(obj, key) {\n  if (typeof obj[key] === 'undefined') {\n    return -1;\n  }\n  return 0;\n};\n\n// common error handler for messages\nunique.errorMessage = function (now, code, opts) {\n  console.error('error', code);\n  console.log('found', Object.keys(found).length, 'unique entries before throwing error. \\nretried:', currentIterations, '\\ntotal time:', now - opts.startTime, 'ms');\n  throw new Error(code + ' for uniqueness check \\n\\nMay not be able to generate any more unique values with current settings. \\nTry adjusting maxTime or maxRetries parameters for faker.unique()')\n};\n\nunique.exec = function (method, args, opts) {\n  //console.log(currentIterations)\n\n  var now = new Date().getTime();\n\n  opts = opts || {};\n  opts.maxTime = opts.maxTime || 3;\n  opts.maxRetries = opts.maxRetries || 50;\n  opts.exclude = opts.exclude || exclude;\n  opts.compare = opts.compare || defaultCompare;\n\n  if (typeof opts.currentIterations !== 'number') {\n    opts.currentIterations = 0;\n  }\n\n  if (typeof opts.startTime === 'undefined') {\n    opts.startTime = new Date().getTime();\n  }\n\n  var startTime = opts.startTime;\n\n  // support single exclude argument as string\n  if (typeof opts.exclude === 'string') {\n    opts.exclude = [opts.exclude];\n  }\n\n  if (opts.currentIterations > 0) {\n    // console.log('iterating', currentIterations)\n  }\n\n  // console.log(now - startTime)\n  if (now - startTime >= opts.maxTime) {\n    return unique.errorMessage(now, 'Exceeded maxTime:' + opts.maxTime, opts);\n  }\n\n  if (opts.currentIterations >= opts.maxRetries) {\n    return unique.errorMessage(now, 'Exceeded maxRetries:' + opts.maxRetries, opts);\n  }\n\n  // execute the provided method to find a potential satifised value\n  var result = method.apply(this, args);\n\n  // if the result has not been previously found, add it to the found array and return the value as it's unique\n  if (opts.compare(found, result) === -1 && opts.exclude.indexOf(result) === -1) {\n    found[result] = result;\n    opts.currentIterations = 0;\n    return result;\n  } else {\n    // console.log('conflict', result);\n    opts.currentIterations++;\n    return unique.exec(method, args, opts);\n  }\n};\n\nmodule.exports = unique;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}