{"ast":null,"code":"var _jsxFileName = \"/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/LightDrop.js\";\n// Import React\nimport React from \"react\"; // Import Multiselect \n\nimport Multiselect from 'multiselect-react-dropdown'; // Import io from socket to send to backend flask\n\nimport io from 'socket.io-client'; // Create the socket\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(); // Component for AngleDial (rendered from Agent)\n\nclass LightDrop extends React.Component {\n  // Dial has a cur_angle and an id\n  constructor(props) {\n    super(props);\n    const lights = this.props.lights;\n    const already_on = lights.filter(light => light.on);\n    this.state = {\n      agent_id: this.props.agent_id,\n      lights: lights,\n      selectedValues: already_on\n    };\n    this.onSelect = this.onSelect.bind(this);\n    this.onRemove = this.onRemove.bind(this);\n  }\n\n  onSelect(selectedList, selectedItem) {\n    const turn_on = selectedItem;\n    turn_on.on = true;\n    this.props.lights_pass(turn_on); // New light\n  }\n\n  onRemove(selectedList, removedItem) {\n    const turn_off = removedItem;\n    turn_off.on = false;\n    this.props.lights_pass(turn_off);\n  } // Render the Dial component from the react-dial-knob package\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Multiselect, {\n      options: this.state.lights // Options to display in the dropdown\n      ,\n      selectedValues: this.state.selectedValues // Preselected value to persist in dropdown\n      ,\n      onSelect: this.onSelect // Function will trigger on select event\n      ,\n      onRemove: this.onRemove // Function will trigger on remove event\n      ,\n      displayValue: \"light\" // Property name to display in the dropdown options\n      ,\n      avoidHighlightFirstOption: true // Property name to display in the dropdown options\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  } // End Render\n\n\n} // End Class\n// Let us use in other componenets\n\n\nexport default LightDrop;","map":{"version":3,"names":["React","Multiselect","io","socket","LightDrop","Component","constructor","props","lights","already_on","filter","light","on","state","agent_id","selectedValues","onSelect","bind","onRemove","selectedList","selectedItem","turn_on","lights_pass","removedItem","turn_off","render"],"sources":["/Users/mattelacqua/Workspace/duckietown-soid/webserver/web-gui/src/LightDrop.js"],"sourcesContent":["// Import React\nimport React from \"react\";\n\n// Import Multiselect \nimport Multiselect from 'multiselect-react-dropdown';\n\n// Import io from socket to send to backend flask\nimport io from 'socket.io-client';\n\n// Create the socket\nconst socket = io();\n\n// Component for AngleDial (rendered from Agent)\nclass LightDrop extends React.Component {\n\n  \n  // Dial has a cur_angle and an id\n  constructor(props) {\n    super(props);\n    const lights = this.props.lights;\n    const already_on = lights.filter(light => light.on);\n    this.state = {\n        agent_id: this.props.agent_id,\n        lights: lights,\n        selectedValues: already_on\n    };\n    this.onSelect = this.onSelect.bind(this);\n    this.onRemove = this.onRemove.bind(this);\n  }\n\n  \n  onSelect(selectedList, selectedItem) {\n    const turn_on = selectedItem;\n    turn_on.on = true;\n    this.props.lights_pass(turn_on);\n    // New light\n  }\n\n  onRemove(selectedList, removedItem) {\n    const turn_off = removedItem;\n    turn_off.on = false;\n    this.props.lights_pass(turn_off);\n  }\n  \n  // Render the Dial component from the react-dial-knob package\n  render() {\n    return ( \n      <Multiselect\n        options={this.state.lights} // Options to display in the dropdown\n        selectedValues={this.state.selectedValues} // Preselected value to persist in dropdown\n        onSelect={this.onSelect} // Function will trigger on select event\n        onRemove={this.onRemove} // Function will trigger on remove event\n        displayValue=\"light\" // Property name to display in the dropdown options\n        avoidHighlightFirstOption // Property name to display in the dropdown options\n        />);\n    } // End Render\n} // End Class\n\n\n\n\n\n// Let us use in other componenets\nexport default LightDrop;\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CAEA;;;AACA,MAAMC,MAAM,GAAGD,EAAE,EAAjB,C,CAEA;;AACA,MAAME,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;EAGtC;EACAC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,MAAMC,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;IACA,MAAMC,UAAU,GAAGD,MAAM,CAACE,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,EAA7B,CAAnB;IACA,KAAKC,KAAL,GAAa;MACTC,QAAQ,EAAE,KAAKP,KAAL,CAAWO,QADZ;MAETN,MAAM,EAAEA,MAFC;MAGTO,cAAc,EAAEN;IAHP,CAAb;IAKA,KAAKO,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;IACA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;EACD;;EAGDD,QAAQ,CAACG,YAAD,EAAeC,YAAf,EAA6B;IACnC,MAAMC,OAAO,GAAGD,YAAhB;IACAC,OAAO,CAACT,EAAR,GAAa,IAAb;IACA,KAAKL,KAAL,CAAWe,WAAX,CAAuBD,OAAvB,EAHmC,CAInC;EACD;;EAEDH,QAAQ,CAACC,YAAD,EAAeI,WAAf,EAA4B;IAClC,MAAMC,QAAQ,GAAGD,WAAjB;IACAC,QAAQ,CAACZ,EAAT,GAAc,KAAd;IACA,KAAKL,KAAL,CAAWe,WAAX,CAAuBE,QAAvB;EACD,CA7BqC,CA+BtC;;;EACAC,MAAM,GAAG;IACP,oBACE,QAAC,WAAD;MACE,OAAO,EAAE,KAAKZ,KAAL,CAAWL,MADtB,CAC8B;MAD9B;MAEE,cAAc,EAAE,KAAKK,KAAL,CAAWE,cAF7B,CAE6C;MAF7C;MAGE,QAAQ,EAAE,KAAKC,QAHjB,CAG2B;MAH3B;MAIE,QAAQ,EAAE,KAAKE,QAJjB,CAI2B;MAJ3B;MAKE,YAAY,EAAC,OALf,CAKuB;MALvB;MAME,yBAAyB,MAN3B,CAM4B;;IAN5B;MAAA;MAAA;MAAA;IAAA,QADF;EASC,CA1CmC,CA0ClC;;;AA1CkC,C,CA2CtC;AAMF;;;AACA,eAAed,SAAf"},"metadata":{},"sourceType":"module"}