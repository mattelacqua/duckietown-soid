(set-logic ALL)
(declare-fun __soid__agent0_state_cars_waiting_to_enter_ackermann!54
             ()
             (_ BitVec 8))
(declare-fun __soid__agent0_state_at_intersection_entry_ackermann!59
             ()
             (_ BitVec 8))
(declare-fun __soid__agent1_state_safe_to_enter_ackermann!30 () (_ BitVec 8))
(declare-fun __soid__agent1_state_intersection_empty_ackermann!56
             ()
             (_ BitVec 8))
(declare-fun __soid__agent1_state_cars_waiting_to_enter_ackermann!39
             ()
             (_ BitVec 8))
(declare-fun __soid__agent1_state_has_right_of_way_ackermann!18 () (_ BitVec 8))
(declare-fun __soid__agent1_state_at_intersection_entry_ackermann!19
             ()
             (_ BitVec 8))
(declare-fun __soid__agent0_state_intersection_empty_ackermann!42
             ()
             (_ BitVec 8))
(declare-fun __soid__agent0_state_approaching_intersection_ackermann!36
             ()
             (_ BitVec 8))
(declare-fun __soid__agent1_state_approaching_intersection_ackermann!58
             ()
             (_ BitVec 8))
(declare-fun __soid__agent0_direction_ackermann!33 () (_ BitVec 32))
(declare-fun __soid__agent0_tile_x_ackermann!27 () (_ BitVec 32))
(declare-fun __soid__agent1_state_is_tailgating_ackermann!32 () (_ BitVec 8))
(declare-fun __soid__agent1_state_car_entering_range_ackermann!49
             ()
             (_ BitVec 8))
(declare-fun agent0_patience_ackermann!11 () (_ BitVec 32))
(declare-fun __soid__agent1_state_obj_in_range_ackermann!60 () (_ BitVec 8))
(declare-fun agent1_pos_z_ackermann!44 () (_ BitVec 32))
(declare-fun __soid__agent1_state_in_intersection_ackermann!14 () (_ BitVec 8))
(declare-fun __soid__agent1_tile_x_ackermann!22 () (_ BitVec 32))
(declare-fun agent0_turn_choice_ackermann!8 () (_ BitVec 32))
(declare-fun __soid__agent0_state_car_entering_range_ackermann!37
             ()
             (_ BitVec 8))
(declare-fun agent1_intersection_arrival_ackermann!16 () (_ BitVec 32))
(declare-fun __soid__agent1_direction_ackermann!26 () (_ BitVec 32))
(declare-fun __soid__agent0_state_in_intersection_ackermann!40 () (_ BitVec 8))
(declare-fun agent1_pos_x_ackermann!34 () (_ BitVec 32))
(declare-fun agent0_pos_x_ackermann!1 () (_ BitVec 32))
(declare-fun agent1_step_count_ackermann!47 () (_ BitVec 32))
(declare-fun __soid__agent0_state_obj_in_range_ackermann!50 () (_ BitVec 8))
(declare-fun agent1_patience_ackermann!41 () (_ BitVec 32))
(declare-fun agent0_lookahead_ackermann!6 () (_ BitVec 32))
(declare-fun agent1_lookahead_ackermann!23 () (_ BitVec 32))
(declare-fun agent0_signal_choice_ackermann!7 () (_ BitVec 32))
(declare-fun agent0_pos_z_ackermann!2 () (_ BitVec 32))
(declare-fun __soid__agent0_state_obj_behind_intersection_ackermann!17
             ()
             (_ BitVec 8))
(declare-fun agent1_turn_choice_ackermann!45 () (_ BitVec 32))
(declare-fun agent1_angle_ackermann!35 () (_ BitVec 32))
(declare-fun __soid__agent0_state_is_tailgating_ackermann!38 () (_ BitVec 8))
(declare-fun __soid__agent0_tile_z_ackermann!15 () (_ BitVec 32))
(declare-fun agent1_initial_direction_ackermann!28 () (_ BitVec 32))
(declare-fun __soid__agent1_state_next_to_go_ackermann!48 () (_ BitVec 8))
(declare-fun __soid__agent1_tile_z_ackermann!20 () (_ BitVec 32))
(declare-fun agent0_intersection_arrival_ackermann!10 () (_ BitVec 32))
(declare-fun __soid__agent0_state_has_right_of_way_ackermann!31 () (_ BitVec 8))
(declare-fun __soid__agent1_state_obj_behind_intersection_ackermann!46
             ()
             (_ BitVec 8))
(declare-fun agent0_step_count_ackermann!12 () (_ BitVec 32))
(declare-fun agent0_initial_direction_ackermann!9 () (_ BitVec 32))
(declare-fun __soid__agent0_state_next_to_go_ackermann!52 () (_ BitVec 8))
(declare-fun agent1_forward_step_ackermann!43 () (_ BitVec 32))
(declare-fun agent0_forward_step_ackermann!4 () (_ BitVec 32))
(declare-fun __soid__agent1_stop_x_ackermann!57 () (_ BitVec 32))
(declare-fun agent1_speed_ackermann!51 () (_ BitVec 32))
(declare-fun agent0_speed_ackermann!5 () (_ BitVec 32))
(declare-fun __soid__agent0_prev_pos_x_ackermann!24 () (_ BitVec 32))
(declare-fun __soid__agent0_stop_x_ackermann!25 () (_ BitVec 32))
(declare-fun __soid__agent0_stop_z_ackermann!29 () (_ BitVec 32))
(declare-fun agent0_angle_ackermann!3 () (_ BitVec 32))
(declare-fun __soid__agent1_stop_z_ackermann!53 () (_ BitVec 32))
(declare-fun __soid__agent1_prev_pos_x_ackermann!21 () (_ BitVec 32))
(declare-fun agent1_signal_choice_ackermann!0 () (_ BitVec 32))
(declare-fun __soid__agent0_state_safe_to_enter_ackermann!13 () (_ BitVec 8))
(declare-fun __soid__mrow__ackermann!55 () (_ BitVec 32))
(assert (= ((_ extract 0 0) __soid__agent0_state_cars_waiting_to_enter_ackermann!54)
   #b1))
(assert (= ((_ extract 0 0) __soid__agent0_state_at_intersection_entry_ackermann!59)
   #b1))
(assert (= ((_ extract 0 0) __soid__agent1_state_safe_to_enter_ackermann!30) #b1))
(assert (= ((_ extract 0 0) __soid__agent1_state_intersection_empty_ackermann!56) #b1))
(assert (= ((_ extract 0 0) __soid__agent1_state_cars_waiting_to_enter_ackermann!39)
   #b1))
(assert (= ((_ extract 0 0) __soid__agent1_state_has_right_of_way_ackermann!18) #b1))
(assert (= ((_ extract 0 0) __soid__agent1_state_at_intersection_entry_ackermann!19)
   #b1))
(assert (= ((_ extract 0 0) __soid__agent0_state_intersection_empty_ackermann!42) #b1))
(assert (= ((_ extract 0 0) __soid__agent0_state_approaching_intersection_ackermann!36)
   #b1))
(assert (= ((_ extract 0 0) __soid__agent1_state_approaching_intersection_ackermann!58)
   #b1))
(assert (= #x00000000 __soid__agent0_direction_ackermann!33))
(assert (= #x00000002 __soid__agent0_tile_x_ackermann!27))
(assert (not (= ((_ extract 0 0) __soid__agent1_state_is_tailgating_ackermann!32) #b1)))
(assert (not (= ((_ extract 0 0) __soid__agent1_state_car_entering_range_ackermann!49)
        #b1)))
(assert (= #x00000000 agent0_patience_ackermann!11))
(assert (not (= ((_ extract 0 0) __soid__agent1_state_obj_in_range_ackermann!60) #b1)))
(assert (not (fp.gt ((_ to_fp 8 24) agent1_pos_z_ackermann!44)
            ((_ to_fp 8 24) #x403b3333))))
(assert (not (= ((_ extract 0 0) __soid__agent1_state_in_intersection_ackermann!14) #b1)))
(assert (= #x00000001 __soid__agent1_tile_x_ackermann!22))
(assert (= #x00000002 agent0_turn_choice_ackermann!8))
(assert (not (= ((_ extract 0 0) __soid__agent0_state_car_entering_range_ackermann!37)
        #b1)))
(assert (= #x0000003c agent1_intersection_arrival_ackermann!16))
(assert (= #x00000002 __soid__agent1_direction_ackermann!26))
(assert (not (fp.lt ((_ to_fp 8 24) agent1_pos_z_ackermann!44)
            ((_ to_fp 8 24) #x00000000))))
(assert (not (= ((_ extract 0 0) __soid__agent0_state_in_intersection_ackermann!40) #b1)))
(assert (not (fp.leq ((_ to_fp 8 24) agent0_pos_x_ackermann!1)
             (fp.sub roundNearestTiesToEven
                     ((_ to_fp 8 24) agent1_pos_x_ackermann!34)
                     ((_ to_fp 8 24) #x3e3851ec)))))
(assert (= #x0000006d agent1_step_count_ackermann!47))
(assert (not (= ((_ extract 0 0) __soid__agent0_state_obj_in_range_ackermann!50) #b1)))
(assert (= #x00000000 agent1_patience_ackermann!41))
(assert (let ((a!1 ((_ to_fp 8 24)
             roundNearestTiesToEven
             (fp.div roundNearestTiesToEven
                     ((_ to_fp 11 53)
                       roundNearestTiesToEven
                       ((_ to_fp 8 24) agent0_lookahead_ackermann!6))
                     ((_ to_fp 11 53) #x4024000000000000)))))
  (not (fp.geq ((_ to_fp 8 24) agent1_pos_x_ackermann!34)
               (fp.sub roundNearestTiesToEven
                       ((_ to_fp 8 24) agent0_pos_x_ackermann!1)
                       a!1)))))
(assert (not (fp.geq ((_ to_fp 8 24) agent0_pos_x_ackermann!1)
             (fp.add roundNearestTiesToEven
                     ((_ to_fp 8 24) agent1_pos_x_ackermann!34)
                     ((_ to_fp 8 24) agent1_lookahead_ackermann!23)))))
(assert (= #x00000002 agent0_signal_choice_ackermann!7))
(assert (let ((a!1 ((_ fp.to_sbv 32)
             roundTowardZero
             (fp.div roundNearestTiesToEven
                     ((_ to_fp 11 53)
                       roundNearestTiesToEven
                       ((_ to_fp 8 24) agent0_pos_x_ackermann!1))
                     ((_ to_fp 11 53) #x3fe2b851e0000000)))))
  (= #x00000002
     ((_ fp.to_sbv 32)
       roundTowardZero
       ((_ to_fp 11 53) roundNearestTiesToEven a!1)))))
(assert (let ((a!1 ((_ fp.to_sbv 32)
             roundTowardZero
             (fp.div roundNearestTiesToEven
                     ((_ to_fp 11 53)
                       roundNearestTiesToEven
                       ((_ to_fp 8 24) agent0_pos_z_ackermann!2))
                     ((_ to_fp 11 53) #x3fe2b851e0000000)))))
  (= #x00000003
     ((_ fp.to_sbv 32)
       roundTowardZero
       ((_ to_fp 11 53) roundNearestTiesToEven a!1)))))
(assert (not (fp.gt ((_ to_fp 8 24) agent0_pos_z_ackermann!2)
            ((_ to_fp 8 24) #x403b3333))))
(assert (not (= ((_ extract 0 0)
          __soid__agent0_state_obj_behind_intersection_ackermann!17)
        #b1)))
(assert (= #x00000002 agent1_turn_choice_ackermann!45))
(assert (not (fp.lt ((_ to_fp 8 24) agent0_pos_x_ackermann!1)
            ((_ to_fp 8 24) #x00000000))))
(assert (let ((a!1 (fp.mul roundNearestTiesToEven
                   (fp.div roundNearestTiesToEven
                           ((_ to_fp 11 53)
                             roundNearestTiesToEven
                             ((_ to_fp 8 24) agent1_angle_ackermann!35))
                           ((_ to_fp 11 53) #x40091eb851eb851f))
                   ((_ to_fp 11 53) #x4066800000000000))))
  (not (and (fp.gt ((_ to_fp 8 24) roundNearestTiesToEven a!1)
                   ((_ to_fp 8 24) #x42340000))
            (fp.leq ((_ to_fp 8 24) roundNearestTiesToEven a!1)
                    ((_ to_fp 8 24) #x43070000))))))
(assert (not (= ((_ extract 0 0) __soid__agent0_state_is_tailgating_ackermann!38) #b1)))
(assert (not (fp.leq ((_ to_fp 8 24) agent0_pos_z_ackermann!2)
             (fp.add roundNearestTiesToEven
                     ((_ to_fp 8 24) agent1_pos_x_ackermann!34)
                     ((_ to_fp 8 24) agent1_lookahead_ackermann!23)))))
(assert (let ((a!1 (fp.mul roundNearestTiesToEven
                   (fp.div roundNearestTiesToEven
                           ((_ to_fp 11 53)
                             roundNearestTiesToEven
                             ((_ to_fp 8 24) agent1_angle_ackermann!35))
                           ((_ to_fp 11 53) #x40091eb851eb851f))
                   ((_ to_fp 11 53) #x4066800000000000))))
  (not (and (fp.gt ((_ to_fp 8 24) roundNearestTiesToEven a!1)
                   ((_ to_fp 8 24) #x43070000))
            (fp.leq ((_ to_fp 8 24) roundNearestTiesToEven a!1)
                    ((_ to_fp 8 24) #x43610000))))))
(assert (= #x00000003 __soid__agent0_tile_z_ackermann!15))
(assert (not (fp.lt ((_ to_fp 8 24) agent0_pos_z_ackermann!2)
            ((_ to_fp 8 24) #x00000000))))
(assert (= #x00000002 agent1_initial_direction_ackermann!28))
(assert (let ((a!1 (fp.mul roundNearestTiesToEven
                   (fp.div roundNearestTiesToEven
                           ((_ to_fp 11 53)
                             roundNearestTiesToEven
                             ((_ to_fp 8 24) agent1_angle_ackermann!35))
                           ((_ to_fp 11 53) #x40091eb851eb851f))
                   ((_ to_fp 11 53) #x4066800000000000))))
(let ((a!2 (ite (and (fp.gt ((_ to_fp 8 24) roundNearestTiesToEven a!1)
                            ((_ to_fp 8 24) #x43610000))
                     (fp.leq ((_ to_fp 8 24) roundNearestTiesToEven a!1)
                             ((_ to_fp 8 24) #x439d8000)))
                #x00000001
                #x00000002)))
  (= #x00000002 a!2))))
(assert (not (fp.lt ((_ to_fp 8 24) agent1_pos_x_ackermann!34)
            ((_ to_fp 8 24) #x00000000))))
(assert (not (= ((_ extract 0 0) __soid__agent1_state_next_to_go_ackermann!48) #b1)))
(assert (= #x00000002 __soid__agent1_tile_z_ackermann!20))
(assert (let ((a!1 ((_ fp.to_sbv 32)
             roundTowardZero
             (fp.div roundNearestTiesToEven
                     ((_ to_fp 11 53)
                       roundNearestTiesToEven
                       ((_ to_fp 8 24) agent1_pos_x_ackermann!34))
                     ((_ to_fp 11 53) #x3fe2b851e0000000)))))
  (= #x00000001
     ((_ fp.to_sbv 32)
       roundTowardZero
       ((_ to_fp 11 53) roundNearestTiesToEven a!1)))))
(assert (= #x0000004d agent0_intersection_arrival_ackermann!10))
(assert (not (= ((_ extract 0 0) __soid__agent0_state_has_right_of_way_ackermann!31)
        #b1)))
(assert (not (= ((_ extract 0 0)
          __soid__agent1_state_obj_behind_intersection_ackermann!46)
        #b1)))
(assert (let ((a!1 ((_ fp.to_sbv 32)
             roundTowardZero
             (fp.div roundNearestTiesToEven
                     ((_ to_fp 11 53)
                       roundNearestTiesToEven
                       ((_ to_fp 8 24) agent1_pos_z_ackermann!44))
                     ((_ to_fp 11 53) #x3fe2b851e0000000)))))
  (= #x00000002
     ((_ fp.to_sbv 32)
       roundTowardZero
       ((_ to_fp 11 53) roundNearestTiesToEven a!1)))))
(assert (= #x0000006d agent0_step_count_ackermann!12))
(assert (not (fp.gt ((_ to_fp 8 24) agent1_pos_x_ackermann!34)
            ((_ to_fp 8 24) #x403b3333))))
(assert (= #x00000000 agent0_initial_direction_ackermann!9))
(assert (not (= ((_ extract 0 0) __soid__agent0_state_next_to_go_ackermann!52) #b1)))
(assert (not (fp.gt ((_ to_fp 8 24) agent0_pos_x_ackermann!1)
            ((_ to_fp 8 24) #x403b3333))))
(assert (fp.eq ((_ to_fp 8 24) agent1_angle_ackermann!35) ((_ to_fp 8 24) #x3c8b4396)))
(assert (fp.eq ((_ to_fp 8 24) agent1_pos_x_ackermann!34) ((_ to_fp 8 24) #x3f939581)))
(assert (fp.eq ((_ to_fp 8 24) agent1_forward_step_ackermann!43)
       ((_ to_fp 8 24) #x3ee147ae)))
(assert (fp.eq ((_ to_fp 8 24) agent0_forward_step_ackermann!4)
       ((_ to_fp 8 24) #x3ee147ae)))
(assert (let ((a!1 (ite (fp.gt ((_ to_fp 11 53)
                         roundNearestTiesToEven
                         ((_ to_fp 8 24) agent1_speed_ackermann!51))
                       ((_ to_fp 11 53) #x3fd6666666666666))
                (fp.to_ieee_bv ((_ to_fp 8 24) #x3e99999a))
                agent1_speed_ackermann!51)))
(let ((a!2 (fp.add roundNearestTiesToEven
                   ((_ to_fp 8 24) #x3f15c28f)
                   (fp.sub roundNearestTiesToEven
                           ((_ to_fp 8 24) #x3f15c28f)
                           (fp.mul roundNearestTiesToEven
                                   ((_ to_fp 8 24) a!1)
                                   ((_ to_fp 8 24) #x3f15c28f))))))
  (fp.eq a!2 ((_ to_fp 8 24) __soid__agent1_stop_x_ackermann!57)))))
(assert (fp.eq ((_ to_fp 8 24) agent0_lookahead_ackermann!6)
       ((_ to_fp 8 24) #x3f15c28f)))
(assert (fp.eq ((_ to_fp 8 24) agent0_speed_ackermann!5) ((_ to_fp 8 24) #x3b03126f)))
(assert (fp.eq ((_ to_fp 8 24) agent0_pos_x_ackermann!1)
       ((_ to_fp 8 24) __soid__agent0_prev_pos_x_ackermann!24)))
(assert (fp.eq ((_ to_fp 8 24) #x3f60a3d6)
       ((_ to_fp 8 24) __soid__agent0_stop_x_ackermann!25)))
(assert (let ((a!1 (ite (fp.gt ((_ to_fp 11 53)
                         roundNearestTiesToEven
                         ((_ to_fp 8 24) agent0_speed_ackermann!5))
                       ((_ to_fp 11 53) #x3fd6666666666666))
                (fp.to_ieee_bv ((_ to_fp 8 24) #x3e99999a))
                agent0_speed_ackermann!5)))
(let ((a!2 (fp.sub roundNearestTiesToEven
                   ((_ to_fp 8 24) #x4015c28f)
                   (fp.sub roundNearestTiesToEven
                           ((_ to_fp 8 24) #x3f15c28f)
                           (fp.mul roundNearestTiesToEven
                                   ((_ to_fp 8 24) a!1)
                                   ((_ to_fp 8 24) #x3f15c28f))))))
  (fp.eq a!2 ((_ to_fp 8 24) __soid__agent0_stop_z_ackermann!29)))))
(assert (fp.eq ((_ to_fp 8 24) agent0_pos_z_ackermann!2) ((_ to_fp 8 24) #x3feba5e3)))
(assert (fp.eq ((_ to_fp 8 24) agent1_speed_ackermann!51) ((_ to_fp 8 24) #x3e3020c5)))
(assert (fp.eq ((_ to_fp 8 24) agent0_angle_ackermann!3) ((_ to_fp 8 24) #x3fcb4396)))
(assert (fp.eq ((_ to_fp 8 24) #x3fbb3333)
       ((_ to_fp 8 24) __soid__agent1_stop_z_ackermann!53)))
(assert (fp.eq ((_ to_fp 8 24) agent1_pos_z_ackermann!44) ((_ to_fp 8 24) #x3fcb020c)))
(assert (fp.eq ((_ to_fp 8 24) agent1_pos_x_ackermann!34)
       ((_ to_fp 8 24) __soid__agent1_prev_pos_x_ackermann!21)))
(assert (fp.eq ((_ to_fp 8 24) agent1_lookahead_ackermann!23)
       ((_ to_fp 8 24) #x3f15c28f)))
(assert (fp.eq ((_ to_fp 8 24) agent0_pos_x_ackermann!1) ((_ to_fp 8 24) #x3fcae148)))
(assert (fp.lt ((_ to_fp 8 24) agent0_pos_z_ackermann!2) ((_ to_fp 8 24) #x3ff7ae14)))
(assert (fp.lt ((_ to_fp 11 53)
         roundNearestTiesToEven
         ((_ to_fp 8 24) agent1_pos_x_ackermann!34))
       ((_ to_fp 11 53) #x3ff34bc69ccccccd)))
(assert (let ((a!1 (fp.mul roundNearestTiesToEven
                   (fp.div roundNearestTiesToEven
                           ((_ to_fp 11 53)
                             roundNearestTiesToEven
                             ((_ to_fp 8 24) agent0_angle_ackermann!3))
                           ((_ to_fp 11 53) #x40091eb851eb851f))
                   ((_ to_fp 11 53) #x4066800000000000))))
  (fp.leq ((_ to_fp 8 24) roundNearestTiesToEven a!1)
          ((_ to_fp 8 24) #x43070000))))
(assert (fp.leq ((_ to_fp 8 24) agent0_pos_x_ackermann!1)
        (fp.add roundNearestTiesToEven
                ((_ to_fp 8 24) agent1_pos_x_ackermann!34)
                ((_ to_fp 8 24) agent1_lookahead_ackermann!23))))
(assert (fp.gt ((_ to_fp 8 24) agent1_pos_x_ackermann!34) ((_ to_fp 8 24) #x3f7d70a3)))
(assert (let ((a!1 (fp.mul roundNearestTiesToEven
                   (fp.div roundNearestTiesToEven
                           ((_ to_fp 11 53)
                             roundNearestTiesToEven
                             ((_ to_fp 8 24) agent0_angle_ackermann!3))
                           ((_ to_fp 11 53) #x40091eb851eb851f))
                   ((_ to_fp 11 53) #x4066800000000000))))
  (fp.gt ((_ to_fp 8 24) roundNearestTiesToEven a!1)
         ((_ to_fp 8 24) #x42340000))))
(assert (fp.gt ((_ to_fp 11 53)
         roundNearestTiesToEven
         ((_ to_fp 8 24) agent0_pos_z_ackermann!2))
       ((_ to_fp 11 53) #x3ffb810603333333)))
(assert (fp.geq ((_ to_fp 8 24) agent0_pos_x_ackermann!1)
        ((_ to_fp 8 24) agent1_pos_x_ackermann!34)))
(assert (fp.geq ((_ to_fp 8 24) agent0_pos_x_ackermann!1)
        (fp.sub roundNearestTiesToEven
                (fp.sub roundNearestTiesToEven
                        ((_ to_fp 8 24) agent1_pos_x_ackermann!34)
                        ((_ to_fp 8 24) agent1_lookahead_ackermann!23))
                ((_ to_fp 8 24) #x3e3851ec))))
(assert (fp.geq ((_ to_fp 8 24) agent0_pos_z_ackermann!2)
        ((_ to_fp 8 24) agent1_pos_x_ackermann!34)))
(assert (let ((a!1 (ite (= #x00000001 agent1_signal_choice_ackermann!0)
                #x01
                (ite (= #x00000000 agent1_signal_choice_ackermann!0) #x01 #x00)))
      (a!3 (= ((_ extract 0 0)
                (ite (= #x00000001 agent1_signal_choice_ackermann!0) #x01 #x00))
              #b1)))
(let ((a!2 (= ((_ extract 0 0)
                (ite (= #x00000002 agent1_signal_choice_ackermann!0) #x01 a!1))
              #b1)))
(let ((a!4 (or (= #x00000000 agent1_signal_choice_ackermann!0)
               (and a!2
                    a!3
                    (= ((_ extract 0 0) a!1) #b1)
                    (or (= #x00000002 agent1_signal_choice_ackermann!0)
                        (= #x00000001 agent1_signal_choice_ackermann!0)))))
      (a!6 (and a!2
                (= ((_ extract 0 0)
                     __soid__agent0_state_safe_to_enter_ackermann!13)
                   #b1)
                (or (= #x00000002 agent1_signal_choice_ackermann!0)
                    (= #x00000001 agent1_signal_choice_ackermann!0))
                (not (= ((_ extract 0 0) a!1) #b1))
                (not a!3))))
(let ((a!5 (and a!4
                (not (= ((_ extract 0 0)
                          __soid__agent0_state_safe_to_enter_ackermann!13)
                        #b1)))))
  (or a!5 a!6))))))
(assert (let ((a!1 (= ((_ extract 0 0)
                (ite (= #x00000001 agent1_signal_choice_ackermann!0) #x01 #x00))
              #b1)))
(let ((a!2 (or (= #x00000000 agent1_signal_choice_ackermann!0)
               (and a!1
                    (or (= #x00000002 agent1_signal_choice_ackermann!0)
                        (= #x00000001 agent1_signal_choice_ackermann!0))))))
(let ((a!3 (and a!2
                (not (= ((_ extract 0 0)
                          __soid__agent0_state_safe_to_enter_ackermann!13)
                        #b1)))))
(let ((a!4 (ite (= ((_ extract 0 0) (ite a!3 #x00 #x01)) #b1)
                #x000001ca
                #x000001c8)))
  (= a!4 __soid__mrow__ackermann!55))))))
(check-sat)
(exit)
